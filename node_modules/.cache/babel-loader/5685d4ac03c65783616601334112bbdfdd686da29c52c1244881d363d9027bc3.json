{"ast":null,"code":"import { ADD_CARD, REMOVE_CARD, EDIT_CARD } from \"../../utils/constants\";\nconst initialState = {\n  cards: []\n};\nexport const cardsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_CARD:\n      {\n        const previousCards = [...state.cards];\n        const newCard = action.item;\n        newCard.ID = state.cards.length + 1;\n        return {\n          ...state,\n          cards: [...previousCards, newCard]\n        };\n      }\n    case REMOVE_CARD:\n      {\n        return {\n          ...state,\n          cards: state.cards.filter(item1 => item1.ID !== action.removedItem.ID)\n        };\n      }\n    case EDIT_CARD:\n      {\n        return {\n          ...state,\n          cards: state.cards.map(item1 => {\n            if (item1.ID !== action.editedItem.ID) return item1;else return action.editedItem;\n          })\n        };\n      }\n    default:\n      {\n        return state;\n      }\n  }\n};","map":{"version":3,"names":["ADD_CARD","REMOVE_CARD","EDIT_CARD","initialState","cards","cardsReducer","state","action","type","previousCards","newCard","item","ID","length","filter","item1","removedItem","map","editedItem"],"sources":["C:/Users/kroko/OneDrive/Рабочий стол/game/src/services/reducers/cardsReducer.js"],"sourcesContent":["import {\n  ADD_CARD,\n  REMOVE_CARD,\n  EDIT_CARD\n} from \"../../utils/constants\";\n  \nconst initialState = {\n  cards: []\n}\n\nexport const cardsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_CARD: {\n      const previousCards = [...state.cards];\n      const newCard = action.item;\n      newCard.ID = state.cards.length + 1;\n      return {\n        ...state,\n        cards: [\n          ...previousCards,\n          newCard\n        ],\n      };\n    }\n    case REMOVE_CARD: {\n      return {\n        ...state,\n        cards: state.cards.filter(\n          (item1) => (item1.ID !== action.removedItem.ID)\n        ),\n      };\n    }\n    case EDIT_CARD:{\n      return {\n        ...state,\n        cards: state.cards.map(\n          (item1) => {if (item1.ID !== action.editedItem.ID) return item1; else return action.editedItem}\n        ),\n      };\n    }\n    default: {\n      return state\n    }\n  }\n}\n"],"mappings":"AAAA,SACEA,QAAQ,EACRC,WAAW,EACXC,SAAS,QACJ,uBAAuB;AAE9B,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGH,YAAY;EAAA,IAAEI,MAAM;EACvD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKR,QAAQ;MAAE;QACb,MAAMS,aAAa,GAAG,CAAC,GAAGH,KAAK,CAACF,KAAK,CAAC;QACtC,MAAMM,OAAO,GAAGH,MAAM,CAACI,IAAI;QAC3BD,OAAO,CAACE,EAAE,GAAGN,KAAK,CAACF,KAAK,CAACS,MAAM,GAAG,CAAC;QACnC,OAAO;UACL,GAAGP,KAAK;UACRF,KAAK,EAAE,CACL,GAAGK,aAAa,EAChBC,OAAO;QAEX,CAAC;MACH;IACA,KAAKT,WAAW;MAAE;QAChB,OAAO;UACL,GAAGK,KAAK;UACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,CAACU,MAAM,CACtBC,KAAK,IAAMA,KAAK,CAACH,EAAE,KAAKL,MAAM,CAACS,WAAW,CAACJ,EAAG;QAEnD,CAAC;MACH;IACA,KAAKV,SAAS;MAAC;QACb,OAAO;UACL,GAAGI,KAAK;UACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,CAACa,GAAG,CACnBF,KAAK,IAAK;YAAC,IAAIA,KAAK,CAACH,EAAE,KAAKL,MAAM,CAACW,UAAU,CAACN,EAAE,EAAE,OAAOG,KAAK,CAAC,KAAM,OAAOR,MAAM,CAACW,UAAU;UAAA,CAAC;QAEnG,CAAC;MACH;IACA;MAAS;QACP,OAAOZ,KAAK;MACd;EAAC;AAEL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}