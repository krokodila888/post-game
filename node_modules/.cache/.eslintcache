[{"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\index.tsx":"1","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\reportWebVitals.js":"2","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\services\\reducers\\rootReducer.js":"3","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\App\\App.jsx":"4","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\services\\reducers\\cardsReducer.js":"5","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\services\\reducers\\currentDeckReducer.js":"6","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\Main\\Main.jsx":"7","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\PageNotFound\\PageNotFound.jsx":"8","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\DeckItemPage\\DeckItemPage.jsx":"9","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\utils\\constants.js":"10","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\Footer\\Footer.jsx":"11","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\Header\\Header.jsx":"12","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\Main\\AboutMe\\AboutMe.jsx":"13","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\services\\actions\\currentDeck.js":"14","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\DeckItemPage\\WordCard\\WordCard.jsx":"15","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\DeckItemPage\\CardsHolder\\CardsHolder.jsx":"16","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\NumbersTrainPage\\NumbersTrainPage.jsx":"17","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\WordItemPage\\WordItemPage.jsx":"18","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\index.tsx":"19","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\reportWebVitals.js":"20","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\services\\reducers\\rootReducer.js":"21","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\components\\App\\App.jsx":"22","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\services\\reducers\\cardsReducer.js":"23","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\services\\reducers\\currentDeckReducer.js":"24","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\components\\PageNotFound\\PageNotFound.jsx":"25","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\components\\Main\\Main.jsx":"26","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\utils\\constants.js":"27","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\services\\actions\\currentDeck.js":"28","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\components\\Main\\AboutMe\\AboutMe.jsx":"29","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\services\\reducers\\userReducer.js":"30"},{"size":1000,"mtime":1696061014720,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1695628188336,"results":"33","hashOfConfig":"32"},{"size":234,"mtime":1695628189837,"results":"34","hashOfConfig":"32"},{"size":2966,"mtime":1700171386138,"results":"35","hashOfConfig":"32"},{"size":917,"mtime":1695628189752,"results":"36","hashOfConfig":"32"},{"size":720,"mtime":1695628189798,"results":"37","hashOfConfig":"32"},{"size":362,"mtime":1695628188958,"results":"38","hashOfConfig":"32"},{"size":950,"mtime":1700171418553,"results":"39","hashOfConfig":"32"},{"size":7950,"mtime":1700171904783,"results":"40","hashOfConfig":"32"},{"size":135931,"mtime":1700172142168,"results":"41","hashOfConfig":"32"},{"size":802,"mtime":1695668282440,"results":"42","hashOfConfig":"32"},{"size":947,"mtime":1695628188846,"results":"43","hashOfConfig":"32"},{"size":3911,"mtime":1700076565607,"results":"44","hashOfConfig":"32"},{"size":496,"mtime":1695628189693,"results":"45","hashOfConfig":"32"},{"size":2687,"mtime":1700164316984,"results":"46","hashOfConfig":"32"},{"size":5778,"mtime":1696064375753,"results":"47","hashOfConfig":"32"},{"size":7628,"mtime":1700071791578,"results":"48","hashOfConfig":"32"},{"size":4397,"mtime":1700164376729,"results":"49","hashOfConfig":"32"},{"size":1000,"mtime":1696061014720,"results":"50","hashOfConfig":"51"},{"size":362,"mtime":1695628188336,"results":"52","hashOfConfig":"51"},{"size":150,"mtime":1709733272498,"results":"53","hashOfConfig":"51"},{"size":1332,"mtime":1709648570708,"results":"54","hashOfConfig":"51"},{"size":921,"mtime":1709733294681,"results":"55","hashOfConfig":"51"},{"size":724,"mtime":1709733289557,"results":"56","hashOfConfig":"51"},{"size":890,"mtime":1709734898958,"results":"57","hashOfConfig":"51"},{"size":3782,"mtime":1709734127400,"results":"58","hashOfConfig":"51"},{"size":1270,"mtime":1709733266681,"results":"59","hashOfConfig":"51"},{"size":500,"mtime":1709733532738,"results":"60","hashOfConfig":"51"},{"size":2199,"mtime":1709649561208,"results":"61","hashOfConfig":"51"},{"size":1100,"mtime":1709733152136,"results":"62","hashOfConfig":"51"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},"uagjdl",{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1xzip5s",{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\index.tsx",["164","165"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\nimport App from './components/App/App';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './services/reducers/rootReducer.js';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport { BrowserRouter } from 'react-router-dom';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\") as HTMLFormElement);\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>\n);\n\nreportWebVitals();\n","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\reportWebVitals.js",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\services\\reducers\\rootReducer.js",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\App\\App.jsx",["166","167","168","169"],[],"import React, { useEffect, useState } from \"react\";\nimport { Routes, Route } from 'react-router-dom';\nimport Main from '../Main/Main.jsx';\nimport PageNotFound from '../PageNotFound/PageNotFound.jsx';\nimport DeckItemPage from '../DeckItemPage/DeckItemPage.jsx';\nimport WordItemPage from '../WordItemPage/WordItemPage.jsx';\nimport NumbersTrainPage from '../NumbersTrainPage/NumbersTrainPage.jsx';\nimport './App.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { vocabulary, topics, verbs } from \"../../utils/constants.js\";\nimport { removeCurrentDeck, setCurrentDeck, setCurrentWord  } from '../../services/actions/currentDeck.js';\n\nfunction App() {\n\n  const { currentDeck } = useSelector(state => state.currentDeckReducer);\n  const { currentWord } = useSelector(state => state.currentDeckReducer);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(()=> {\n    let aa;\n    let aaa;\n    //console.log(window.location.pathname.slice(8));\n    const adress = window.location.pathname.slice(8);\n    const firstPos = adress.indexOf('/');\n    /*console.log(firstPos);\n    console.log(window.location.pathname.slice(9 + firstPos));\n    console.log(window.location.pathname.substr(8, firstPos));*/\n    if (firstPos !== -1) {\n      aa = topics.filter(item => item.enTopic === window.location.pathname.substr(8, firstPos));\n      aaa = verbs.filter(item => item.enTranslation === window.location.pathname.slice(9 + firstPos));\n      //console.log(aaa);\n    }\n    else {\n      aa = topics.filter(item => item.enTopic === window.location.pathname.slice(8));\n    };\n    //console.log(aa);\n    if (aa !== undefined && aa) {\n      dispatch(setCurrentDeck(aa[0]));\n    };\n    if (aaa !== undefined && aaa) {\n      //console.log(aaa[0]);\n      dispatch(setCurrentWord(aaa[0]));\n    };\n    if (aa && aaa && aa.length !== 0 && aaa.length === 0) {\n      navigate(`/topics/${aa[0].enTopic}`);\n    }\n    if ((!aa && !aaa) || (aa.length === 0)) {\n      navigate(`/`);\n    }\n  }, [])\n\n  return (\n    <>\n      <div className=\"page\">\n        <Routes>\n          <Route \n            exact path=\"/\" \n            element={\n              <Main />\n            }>  \n          </Route>\n          <Route \n            path=\"*\" \n            element={\n              <PageNotFound/>\n            }>\n          </Route>\n          <Route \n            path=\"/numbers\" \n            element={\n              <NumbersTrainPage/>\n            }>\n          </Route>\n          {currentDeck !==null && \n          <Route \n            path=\"/topics/:deckItem\" \n            element={\n              <DeckItemPage />\n            }\n          >\n          </Route>}\n          {currentWord !==null && \n          <Route \n            path=\"/topics/:deckItem/:wordItem\" \n            element={\n              <WordItemPage />\n            }\n          >\n          </Route>}\n        </Routes>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\services\\reducers\\cardsReducer.js",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\services\\reducers\\currentDeckReducer.js",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\Main\\Main.jsx",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\PageNotFound\\PageNotFound.jsx",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\DeckItemPage\\DeckItemPage.jsx",["170"],[],"import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport Header from '../Header/Header.jsx';\nimport Footer from '../Footer/Footer.jsx';\nimport CardsHolder from './CardsHolder/CardsHolder.jsx';\nimport './DeckItemPage.css';\nimport WordCard from './WordCard/WordCard.jsx';\nimport { vocabulary } from \"../../utils/constants.js\";\nimport arrow from '../../images/arrow2.png';\nimport magnifier from '../../images/magn.png';\nimport { removeCurrentDeck } from '../../services/actions/currentDeck.js';\nimport PageNotFound from '../PageNotFound/PageNotFound.jsx';\n\nfunction DeckItemPage() {\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [words, setWords] = useState([]);\n  const [filteredWords, setFilteredWords] = useState([]);\n  const [wordsAreVisible, setWordsAreVisible] = useState(true);\n  const [cardsAreVisible, setCardsAreVisible] = useState(false);\n  const [repeatMode, setRepeatMode] = useState(false);\n  const [search, setSearch] = useState('');\n  const { currentDeck } = useSelector(state => state.currentDeckReducer);\n\n  useEffect(() => {\n    if (search !== '')\n  {setFilteredWords(words.filter((item) => \n    {if (!item.ruTopic.includes('Глаголы')) return (\n        (item.word.toLowerCase().includes(search.toLowerCase()) ) \n        || (item.vocalization.toLowerCase().includes(search.toLowerCase()) )\n        || (item.translation.toLowerCase().includes(search.toLowerCase()) )\n        || (item.transcription.toLowerCase().includes(search.toLowerCase()) )\n      );\n    if (item.ruTopic.includes('Глаголы')) return ((\n        item.word.toLowerCase().includes(search.toLowerCase()) ) \n      || (item.vocalization.toLowerCase().includes(search.toLowerCase()) )\n      || (item.translation.toLowerCase().includes(search.toLowerCase()) )\n      || (item.transcription.toLowerCase().includes(search.toLowerCase()) )\n      || (item.infinitive.translation.toLowerCase().includes(search.toLowerCase()) )\n      || (item.infinitive.word.toLowerCase().includes(search.toLowerCase()) )\n      )\n      || (item.infinitive.vocalization.toLowerCase().includes(search.toLowerCase()) )\n      || (item.infinitive.transcription.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[0].vocalization.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[1].vocalization.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[2].vocalization.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[3].vocalization.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[0].word.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[1].word.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[2].word.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[3].word.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[0].transcription.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[1].transcription.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[2].transcription.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[3].transcription.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[0].translation.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[1].translation.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[2].translation.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[3].translation.toLowerCase().includes(search.toLowerCase()) )\n    }\n    ))}\n    else {setFilteredWords(words)}\n  }, [words, search])\n\n  useEffect(()=> {\n    setSearch('');\n  }, [])\n\n  /*useEffect(()=> {\n    console.log(filteredWords);\n  }, [filteredWords])\n\n  useEffect(()=> {\n    console.log(search);\n  }, [search])*/\n\n  useEffect(()=> {\n    let aaa;\n    if (currentDeck && currentDeck !== null) {\n      aaa = vocabulary.filter(item => item.ruTopic.includes(currentDeck.ruTopic));\n      setWords(aaa);\n    };\n    if (currentDeck && currentDeck !== null && currentDeck.ruTopic === 'Все') {\n      setWords(vocabulary);\n    }\n  }, [currentDeck])\n\n  useEffect(()=> {\n    setFilteredWords(words);\n  }, [words])\n\n  function handleClick() {\n    dispatch(removeCurrentDeck());\n    navigate(`/`);\n  }\n\n  function handleTraunNumbersClick() {\n    dispatch(removeCurrentDeck());\n    navigate(`/numbers`);\n  }\n\n  function handleCloseModesClick() {\n    setWordsAreVisible(true);\n    setCardsAreVisible(false);\n    setRepeatMode(false);\n  }\n\n  function handleRepeatModeClick() {\n    setWordsAreVisible(false);\n    setRepeatMode(true);\n  }\n\n  function handleCardsModeClick() {\n    setCardsAreVisible(true);\n  }\n\n  return (\n    <> {(!currentDeck || currentDeck === null || currentDeck === undefined) ? <PageNotFound /> : <>\n      <Header />\n      <main className=\"main__content1\">\n        <section className=\"deckItem__content2\">\n          <div className=\"deckItem__title-container\">\n            {currentDeck && currentDeck !== null &&\n            <>\n              <h1 className=\"deckItem__title\">\n              Слова по теме: {currentDeck.ruTopic}\n            </h1>\n            <div className=\"deckItem__title-container1\" onClick={handleClick}>\n              <img \n                src={arrow} \n                alt=\"Стрелка назад\" \n                className='deckItem__arrow1'\n              />\n              <p className=\"deckItem__text1\">На главную</p>\n            </div>\n            </>\n            }\n          </div>\n          {wordsAreVisible && !cardsAreVisible && !repeatMode &&\n            <form className=\"searchForm__form\">\n              <div className=\"searchForm__input-container\">\n                <input \n                  className=\"searchForm__input\" \n                  type=\"name\" \n                  name=\"search\" \n                  id=\"search\" \n                  placeholder=\"Введите слово\" \n                  required \n                  onChange={e => setSearch(e.target.value)}/>\n                  <img className=\"searchForm__img\" src={magnifier} alt=\"Лупа\"></img>\n                </div>\n            </form>\n          }\n          {wordsAreVisible && currentDeck !== null && words.length !== 0 && filteredWords !== 0 &&\n            <div className=\"deckItem__words\">\n              {filteredWords.map((item, i) => (\n                <WordCard key={i} item={item} cardsAreVisible={cardsAreVisible}/>))\n              }\n            </div>\n          }\n          {!wordsAreVisible && repeatMode &&\n            <CardsHolder words={words} handleCloseModesClick={handleCloseModesClick} />\n          }\n          {wordsAreVisible && !cardsAreVisible &&\n          <div className=\"decks__button-container\">\n            <button className=\"deckItem__train-button\" onClick={handleCardsModeClick}>\n              Учить карточки\n              </button>\n            <button className=\"deckItem__train-button\" onClick={handleRepeatModeClick}>\n              Печатать слова\n            </button>\n            {wordsAreVisible && !cardsAreVisible && !repeatMode && currentDeck.ruTopic === 'Числа' &&\n            <button className=\"deckItem__train-button\" onClick={handleTraunNumbersClick}>\n              Тренировать числа\n            </button>\n            }\n          </div>}\n          {!repeatMode && cardsAreVisible && \n            <div className=\"deckItem__arrow-container\" onClick={handleCloseModesClick}>\n              <img \n                src={arrow} \n                alt=\"Стрелка назад\" \n                className='deckItem__arrow1'\n              />\n              <p className=\"deckItem__text1\">Назад к теме</p>\n            </div>\n          }\n        </section>\n      </main>\n      <Footer />\n      </>\n        }\n    </>\n  );\n}  \n\nexport default DeckItemPage;\n","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\utils\\constants.js",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\Footer\\Footer.jsx",["171","172","173","174"],[],"import './footer.css';\nimport telegram from '../../images/tlg.png';\nimport github from '../../images/github.png';\n\nfunction Footer() {\n\n  return (\n    <footer className=\"footer\">\n      <ul className=\"footer-wrap\">\n        <li className=\"footer__link\">\n          <a href=\"https://github.com/krokodila888\" className=\"footer__link1\" target=\"_blank\">\n            <img className=\"footer__social-icon\" src={github}/>\n              Мой Гитхаб\n          </a>\n        </li>\n        <li className=\"footer__link\">\n          <a href='https://t.me/e_kurakina888' className=\"footer__link1\" target=\"_blank\">\n            <img className=\"footer__social-icon\" src={telegram}/>\n            (пишите об ошибках)\n          </a>\n        </li>\n      </ul>\n    </footer>\n  );\n}\n  \nexport default Footer;",[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\Header\\Header.jsx",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\Main\\AboutMe\\AboutMe.jsx",["175","176","177","178"],[],"import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport './AboutMe.css';\nimport photo from '../../../images/photo1.jpg';\nimport { topics, topicsForRender, partsOfSpeach } from '../../../utils/constants';\nimport { setCurrentDeck } from '../../../services/actions/currentDeck.js';\n\nfunction AboutMe() {\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { currentDeck } = useSelector(state => state.currentDeckReducer);\n\n  function setDeck(item) {\n    dispatch(setCurrentDeck(item));\n    navigate(`/topics/${item.enTopic}`);\n  };\n\n  return (\n    <>\n    <section className=\"aboutMe__content\" id=\"AboutMe\">\n      <div className='aboutMe__text-block'>\n        <div className='aboutMe__column'>\n          <div className='aboutMe__column1'>\n            <p className=\"aboutMe__status-text\">\n            !שלום\n            <br/>\n              Я Женя, и я учу иврит.\n            </p>\n            <p className=\"aboutMe__text\">\n              А еще я учу JavaScript и хочу, чтобы одно работало на другое (и бонусом - чтобы однажды меня взяли на работу в айти). Будет здорово, если эта штука еще кому-нибудь пригодится.\n            </p>\n            <p className=\"aboutMe__text\">\n              Пока слов немного и по конкретному учебнику для начинающих. С хорошей вероятностью будет пополняться)\n            </p>\n          </div>\n        </div>        \n        <div className='aboutMe__column'>\n          <img src={photo} alt=\"Фото Женечки, ужасно симпатичное\" className=\"aboutMe__photo\" />\n        </div>      \n      </div>\n    </section>\n    <section className=\"decks__main-content\" id=\"Main-decks\">\n      <div className=\"decks__content-wrap\">\n        <div className=\"decks__item\" onClick={() => {setDeck({\n          ruTopic: 'Все',\n          enTopic: 'All',\n        })}}>\n          <p className=\"decks__main-item-text\">\n            Все слова\n          </p>\n          <p className=\"decks__grey-item-text\">\n            с поиском\n          </p>\n        </div>\n        <div className=\"decks__middle-item\" onClick={() => {setDeck({\n          ruTopic: 'Глаголы',\n          enTopic: 'Verbs',\n        })}}>\n          <p className=\"decks__main-item-text\">\n            Глаголы\n          </p>\n          <p className=\"decks__grey-item-text\">\n            и их формы\n          </p>\n        </div>\n        <div className=\"decks__item\" onClick={() => {setDeck({\n          ruTopic: 'Числа',\n          enTopic: 'Numbers',\n        })}}>\n          <p className=\"decks__main-item-text\">\n            Числа\n          </p>\n          <p className=\"decks__grey-item-text\">\n            и тренажер к ним\n          </p>\n        </div>\n      </div>\n    </section>\n    <section className=\"decks__content\" id=\"Decks\">\n      <p className=\"aboutMe__title-text\">\n        Части речи\n      </p>\n      <div className=\"decks__content-wrap\">\n      {partsOfSpeach.map((item, i) => (\n        <div key={i} className=\"decks__item\" onClick={() => {setDeck(item)}}>\n          <p className=\"decks__item-text\">\n            {item.ruTopic}\n          </p>\n        </div>))\n      }\n      </div>\n      <p className=\"aboutMe__title-text\">\n        Темы\n      </p>\n      <div className=\"decks__content-wrap\">\n      {topicsForRender.map((item, i) => (\n        <div key={i} className=\"decks__item\" onClick={() => {setDeck(item)}}>\n          <p className=\"decks__item-text\">\n            {item.ruTopic}\n          </p>\n        </div>))\n      }\n      </div>\n    </section>\n    </>\n  );\n}  \n\nexport default AboutMe; \n",[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\services\\actions\\currentDeck.js",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\DeckItemPage\\WordCard\\WordCard.jsx",["179"],[],"import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport around from '../../../images/around.png';\nimport './WordCard.css';\nimport { current } from \"@reduxjs/toolkit\";\nimport { setCurrentWord} from '../../../services/actions/currentDeck.js';\n\nfunction WordCard(props) {\n\n  const {item, cardsAreVisible } = props;\n  const { currentDeck } = useSelector(state => state.currentDeckReducer);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const [hintIsVisible, setHintIsVisible] = useState(false);\n  const [backIsVisible, setBackIsVisible] = useState(false);\n\n  function handleClick() {\n    setHintIsVisible(!hintIsVisible);\n  }\n\n  function handleIconClick() {\n    setBackIsVisible(!backIsVisible);\n  }\n\n  function setText() {\n    if (hintIsVisible) return `${item.transcription}`; else return 'Подсказка'\n  }\n\n  function setVerb() {\n    if (currentDeck) {\n      dispatch(setCurrentWord(item));\n      /*console.log(item);\n      console.log(item.enTranslation);*/\n      /*navigate(`/topics/Verbs/${item.enTranslation}`);*/\n      navigate(`/topics/${currentDeck.enTopic}/${item.enTranslation}`);\n    }\n  }\n\n  return (\n    <div className=\"wordCard\">\n      {!backIsVisible && \n      <>\n        {cardsAreVisible &&         \n        <p className=\"word\">\n          {item.translation}\n        </p>}\n        {!cardsAreVisible && \n        <>\n          <p className=\"word\">\n            {item.vocalization}\n          </p>\n          <p className=\"translation\">\n            {item.translation}\n          </p>\n          <p className=\"translation\">\n            {item.transcription}\n          </p>\n        </>\n        }\n        {cardsAreVisible && \n        <>\n          <p className=\"translation1 translation2\" onClick={handleClick}>\n            {setText()}\n          </p>\n          <img \n            src={around} \n            alt=\"Стрелка переворота\" \n            className='wordCard__img'\n            onClick={handleIconClick}\n          />\n        </>\n        }\n      </>\n      }\n      {backIsVisible && \n      <>\n        <p className=\"word\">\n          {item.vocalization}\n        </p>\n        <p className=\"translation1\">\n          {item.transcription}\n        </p>\n        <img \n          src={around} \n          alt=\"Стрелка переворота\" \n          className='wordCard__img'\n          onClick={handleIconClick}/>\n        </>\n      }\n      {item && item.ruTopic.includes('Глаголы') &&         \n        <p className=\"text\" onClick={setVerb}>\n          cмотреть формы\n        </p>}\n    </div>\n  );\n}  \n\nexport default WordCard;\n","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\DeckItemPage\\CardsHolder\\CardsHolder.jsx",["180","181","182","183"],[],"import React, { useEffect, useState } from \"react\";\nimport './CardsHolder.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport arrow from '../../../images/arrow2.png';\nimport arrow1 from '../../../images/repeat.svg';\n\nfunction CardsHolder(props) {\n\n  const { words, handleCloseModesClick } = props;\n\n  const dispatch = useDispatch();\n  const [repeatMode, setRepeatMode] = useState(true);\n  const [showWord, setShowWord] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [currentWord, setCurrentWord] = useState(null);\n  const [repeatingForm, setMeaning] = useState({ word: '' });\n  const [repeatedWords, setRepeatedWords] = useState([]);\n  const [wordsToRepeat, setWordsToRepeat] = useState([]);\n  const [hintIsVisible, setHintIsVisible] = useState(false);\n  const repeatingInput = document.getElementById('cardsHolderRepeatingInput');\n\n  function startRepeating() {\n    setRepeatMode(true);\n    setCurrentWord(wordsToRepeat[0]);\n  }\n\n  function setText(item) {\n    if (hintIsVisible) return `${item.transcription}`; else return 'Подсказка'\n  }\n\n  useEffect(()=> {\n    if (words && words.length !== 0) {\n      let aaa = words;\n      aaa.forEach(item => item.number = Math.floor(Math.random() * 10) + 1);\n      aaa.sort(function (a, b) {\n        return a.number - b.number;\n      });\n      setWordsToRepeat(aaa);\n    }    \n  }, [words])\n\n  useEffect(()=> {\n    if (words && words.length !== 0 && wordsToRepeat && wordsToRepeat.length === words.length) \n    startRepeating();\n    //console.log('start');\n  }, [wordsToRepeat])\n\n  /*useEffect(()=> {\n    console.log(currentWord)\n  }, [currentWord])*/\n\n  useEffect(()=> {\n    console.log(wordsToRepeat)\n  }, [wordsToRepeat])\n\n  function showHint() {\n    setHintIsVisible(true);\n  }\n\n  function showTranslation() {\n    setShowWord(true);\n  };\n\n  const onRepeatChange = e => {\n    setMeaning({ ...repeatingForm, [e.target.name]: e.target.value });\n  };\n\n  function stopRepeating() {\n    setHintIsVisible(false);\n    setRepeatMode(false);\n    setShowWord(false);\n    setIsCorrect(false);\n    setMeaning({ ...repeatingForm, word: '' });\n    handleCloseModesClick();\n  }\n\n  function repeatAgain() {\n    setShowWord(false);\n    setIsCorrect(false);\n    setWordsToRepeat(words);\n    setHintIsVisible(false);\n  }\n\n  function word() {\n    if (currentWord && currentWord !== null) {\n    return (\n    <>\n      <div className=\"cardsHolder__title-raw\">\n        <p className=\"cardsHolder__title\">\n          {currentWord.translation}\n        </p>\n        <p className=\"cardsHolder__hint\" onClick={showHint}>\n          {setText(currentWord)}\n        </p>\n      </div>\n      {showWord && \n      <>\n        <p className=\"cardsHolder__title\">\n          {currentWord.word}\n        </p>\n        {currentWord && currentWord !== null && currentWord.word !== 'Правда все.' &&\n          <p>\n            Рекомендуется напечатать правильный вариант все равно: так он лучше запомнится\n          </p>\n        }\n      </>}\n    </>)}\n  }\n  \n  useEffect(()=> {\n    if (repeatingInput && (currentWord.word === repeatingForm.word)) \n    {setIsCorrect(true);\n    repeatingInput.classList.add('cardsHolder__input_active');};\n    if (repeatingInput && (currentWord.word !== repeatingForm.word) && isCorrect) {\n      setIsCorrect(false);\n      repeatingInput.classList.remove('cardsHolder__input_active');};\n  }, [repeatingForm])\n\n  function nextWord1() {\n    setRepeatedWords([...repeatedWords, currentWord]);\n    setShowWord(false);\n    setIsCorrect(false);\n    setHintIsVisible(false);\n    setMeaning({ ...repeatingForm, word: '' });\n    repeatingInput.classList.remove('cardsHolder__input_active');\n    if (wordsToRepeat.length > 1) {setCurrentWord(wordsToRepeat[1]); \n    setWordsToRepeat(wordsToRepeat.slice(1));}\n    else {setCurrentWord({word: 'Правда все.', translation: 'Вы повторили все!', transcription: 'Вы можете начать с начала'})}\n  }\n\n  return (\n    <>\n    <section className=\"cardsHolder__content\" id=\"cardsHolder\">\n      {repeatMode && \n      <div className='cardsHolder__form'>\n        <div>\n          {word()}\n        </div>\n        <input \n          placeholder=\"Место для слова\" \n          value={repeatingForm.word} \n          id='cardsHolderRepeatingInput'\n          type=\"text\"\n          name=\"word\" \n          onChange={onRepeatChange}\n          required\n          className='cardsHolder__input'\n          autoComplete=\"off\"\n          autoCorrect=\"off\" \n          autoCapitalize=\"off\" \n          spellCheck=\"false\" />\n        <div className='cardsHolder__button-block'>\n          <button \n            className='cardsHolder__button'\n            onClick={showTranslation}>\n              Показать слово\n          </button>\n          <button \n            className='cardsHolder__button'\n            onClick={nextWord1}>\n              Следующая\n          </button>\n        </div>\n      </div>}\n      {currentWord && currentWord !== null && currentWord.word === 'Правда все.' &&\n      <div className=\"cardsHolder__arrow-container\" onClick={repeatAgain}>\n        <img \n          src={arrow1} \n          alt=\"Стрелка назад\" \n          className='cardsHolder__arrow1'\n        />\n        <p className=\"deckItem__text\">Повторять снова</p>\n      </div>}\n      {\n      <div className=\"cardsHolder__arrow-container\" onClick={stopRepeating}>\n        <img \n          src={arrow} \n          alt=\"Стрелка назад\" \n          className='deckItem__arrow'\n        />\n        <p className=\"deckItem__text\">Назад к теме</p>\n      </div>}\n    </section>\n    </>\n  );\n}  \n\nexport default CardsHolder; \n","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\NumbersTrainPage\\NumbersTrainPage.jsx",["184","185"],[],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport Header from '../Header/Header.jsx';\nimport Footer from '../Footer/Footer.jsx';\nimport './NumbersTrainPage.css';\nimport { vocabulary } from \"../../utils/constants.js\";\nimport arrow from '../../images/arrow2.png';\nimport { removeCurrentDeck, setCurrentDeck } from '../../services/actions/currentDeck.js';\n\nfunction NumbersTrainPage() {\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [currentNum, setCurrentNum] = useState(null);\n  const [showNum, setShowNum] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [hintIsVisible, setHintIsVisible] = useState(false);\n  const words = vocabulary.filter(item => item.ruTopic.includes('Числа'));\n  const [repeatingForm, setMeaning] = useState({ word: '' });\n  const repeatingInput = document.getElementById('cardsHolderRepeatingNumInput');\n\n\n  function makeUnswer() {\n    let num1 = Math.floor(Math.random() * 100) + Math.floor(Math.random() * 10);\n    let meaning1;\n    let transcription1;\n    if (num1 < 21 && words !== null) {\n      meaning1 = words.filter(item => item.num === num1)[0].word;\n      transcription1 = words.filter(item => item.num === num1)[0].transcription;\n    }\n    else if (num1 > 20 && num1 < 101 && num1 % 10 === 0) {\n      meaning1 = words.filter(item => item.num === num1)[0].word;\n      transcription1 = words.filter(item => item.num === num1)[0].transcription;\n    }\n    else if (num1 > 20 && num1 < 110 && num1 !== 100) {\n      let tens1;\n      let tens2;\n      let tens;\n      if (num1 > 20 && num1 < 100) {\n        tens1 = String(num1)[0];\n        tens2 = Number(tens1) * 10;\n      };\n      if (num1 > 99) {\n        tens2 = 100;\n      };\n\n      tens = words.filter(item => item.num === tens2)[0].word;\n      let tensTranscription;\n      tensTranscription = words.filter(item => item.num === tens2)[0].transcription;\n      let lastNum1 = num1 % 10;\n      let lastNum;\n      if (lastNum1 === 1) {\n        lastNum = ' ואחת';\n        transcription1 = `${tensTranscription} вэ ахАт`;\n      };\n      if (lastNum1 === 2) {\n        lastNum = ' ושתיים';\n        transcription1 = `${tensTranscription} у штАйм`;\n      };\n      if (lastNum1 === 3) {\n        lastNum = ' ןשלוש';\n        transcription1 = `${tensTranscription} вэ шалОш`;\n      };\n      if (lastNum1 === 4) {\n        lastNum = ' וארבע';\n        transcription1 = `${tensTranscription} вэ арбА`;\n      };\n      if (lastNum1 === 5) {\n        lastNum = ' וחמש';\n        transcription1 = `${tensTranscription} вэ хамЭш`;\n      };\n      if (lastNum1 === 6) {\n        lastNum = ' ושש';\n        transcription1 = `${tensTranscription} ва шеш`;\n      };\n      if (lastNum1 === 7) {\n        lastNum = ' ושבע';\n        transcription1 = `${tensTranscription} ва шЭва`;\n      };\n      if (lastNum1 === 8) {\n        lastNum = ' ושמונה';\n        transcription1 = `${tensTranscription} у шмОнэ`;\n      };\n      if (lastNum1 === 9) {\n        lastNum = ' ותשע';\n        transcription1 = `${tensTranscription} ва тЭша`;\n      };\n      meaning1 = `${tens}${lastNum}`;\n    }\n    setCurrentNum({num: num1, meaning: meaning1, transcription: transcription1});\n  }\n\n  useEffect(()=> {\n    makeUnswer()\n  }, [])\n\n  function showHint() {\n    setHintIsVisible(true);\n  }\n  function setText() {\n    if (hintIsVisible) return `${currentNum.transcription}`; else return 'Подсказка'\n  }\n\n  function word() {\n    if (currentNum && currentNum !== null) {\n    return (\n    <>\n      <div className=\"cardsHolder__title-raw\">\n        <p className=\"cardsHolder__title\">\n          {currentNum.num}\n        </p>\n        <p className=\"cardsHolder__hint\" onClick={showHint}>\n          {setText()}\n        </p>\n      </div>\n      {showNum && \n      <>\n        <p className=\"cardsHolder__title\">\n          {currentNum.meaning}\n        </p>\n        {currentNum && currentNum !== null &&\n          <p>\n            Рекомендуется напечатать правильный вариант все равно: так он лучше запомнится\n          </p>\n        }\n      </>}\n    </>)}\n  }\n  \n  function showTranslation() {\n    setShowNum(true);\n  };\n\n  const onRepeatChange = e => {\n    setMeaning({ ...repeatingForm, [e.target.name]: e.target.value });\n  };\n\n  useEffect(()=> {\n    if (repeatingInput && (currentNum.meaning === repeatingForm.word)) \n    {setIsCorrect(true);\n    repeatingInput.classList.add('cardsHolder__input_active');};\n    if (repeatingInput && (currentNum.meaning !== repeatingForm.word) && isCorrect) {\n      setIsCorrect(false);\n      repeatingInput.classList.remove('cardsHolder__input_active');};\n  }, [repeatingForm])\n\n  function handleClick() {\n    dispatch(removeCurrentDeck());\n    navigate(`/`);\n  }\n\n  function nextWord1() {\n    setShowNum(false);\n    setIsCorrect(false);\n    setHintIsVisible(false);\n    setMeaning({ ...repeatingForm, word: '' });\n    repeatingInput.classList.remove('cardsHolder__input_active');\n    makeUnswer();\n  }\n\n  function handleCloseModesClick() {\n    setShowNum(false);\n    setIsCorrect(false);\n    setHintIsVisible(false);\n    setMeaning({ ...repeatingForm, word: '' });\n    repeatingInput.classList.remove('cardsHolder__input_active');\n    dispatch(setCurrentDeck({\n      ruTopic: 'Числа',\n      enTopic: 'Numbers',\n    }));\n    navigate('/topics/Numbers');\n  }\n\n  return (\n    <>\n      <Header />\n      <main className=\"main__content1\">\n        <section className=\"deckItem__content\">\n          <div className=\"deckItem__title-container1\">\n            <h1 className=\"numbers__title\">\n              Запоминаем числа\n            </h1>\n            <div className=\"deckItem__title-container1\" onClick={handleClick}>\n              <img \n                src={arrow} \n                alt=\"Стрелка назад\" \n                className='deckItem__arrow'\n              />\n              <p className=\"deckItem__text\">На главную</p>\n            </div>\n          </div>\n          <div className='cardsHolder__form'>\n            <div>\n              {word()}\n            </div>\n            <input \n              placeholder=\"Место для слова\" \n              value={repeatingForm.word} \n              id='cardsHolderRepeatingNumInput'\n              type=\"text\"\n              name=\"word\" \n              onChange={onRepeatChange}\n              required\n              className='cardsHolder__input'\n              autoComplete=\"off\"\n              autoCorrect=\"off\" \n              autoCapitalize=\"off\" \n              spellCheck=\"false\" />\n            <div className='cardsHolder__button-block'>\n              <button \n                className='cardsHolder__button'\n                onClick={showTranslation}>\n                  Показать ответ\n              </button>\n              <button \n                className='cardsHolder__button'\n                onClick={nextWord1}>\n                  Следующее число\n              </button>\n            </div>\n          </div>\n          <div className=\"deckItem__arrow-container\" onClick={handleCloseModesClick}>\n            <img \n              src={arrow} \n              alt=\"Стрелка назад\" \n              className='deckItem__arrow'\n            />\n            <p className=\"deckItem__text\">Назад к теме</p>\n          </div>\n        </section>\n      </main>\n      <Footer />\n    </>\n  );\n}  \n\nexport default NumbersTrainPage;\n","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\WordItemPage\\WordItemPage.jsx",["186","187","188","189","190","191","192","193","194"],[],"import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport Header from '../Header/Header.jsx';\nimport Footer from '../Footer/Footer.jsx';\nimport './WordItemPage.css';\nimport { verbs } from \"../../utils/constants.js\";\nimport arrow from '../../images/arrow2.png';\nimport { removeCurrentDeck } from '../../services/actions/currentDeck.js';\nimport { removeCurrentWord } from '../../services/actions/currentDeck.js';\n\nfunction WordItemPage() {\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [words, setWords] = useState([]);\n  const [wordsAreVisible, setWordsAreVisible] = useState(true);\n  const [cardsAreVisible, setCardsAreVisible] = useState(false);\n  const [repeatMode, setRepeatMode] = useState(false);\n  const { currentDeck } = useSelector(state => state.currentDeckReducer);\n  const { currentWord } = useSelector(state => state.currentDeckReducer);\n\n  function handleClick() {\n    dispatch(removeCurrentDeck());\n    dispatch(removeCurrentWord());\n    navigate(`/`);\n  }\n\n  function handleCBackClick() {\n    console.log(document.referrer);\n    setCardsAreVisible(true);\n    dispatch(removeCurrentWord());\n    navigate(`/topics/${currentDeck.enTopic}`);\n  }\n\n  return (\n    <>\n      <Header />\n      <main className=\"main__content1\">\n        <section className=\"wordItem__content\">\n          <div className=\"wordItem__title-container\">\n            <div className=\"wordItem__titleTextContainer\">\n              <h1 className=\"wordItem__title\">Формы глагола </h1>\n              <p className=\"wordItem__title1\">\n                {currentWord.infinitive.vocalization} \n              </p> \n              <p className=\"wordItem__text-grey\">\n                {currentWord.infinitive.transcription}\n              </p>\n            </div>\n            <div className=\"wordItem__title-container1\" onClick={handleClick}>\n              <img \n                src={arrow} \n                alt=\"Стрелка назад\" \n                className='deckItem__arrow'\n              />\n              <p className=\"deckItem__text\">На главную</p>\n            </div>\n          </div>\n          <div className=\"wordItem__forms-container\">\n            <div className=\"wordItem__form-container\">\n              <p className=\"wordItem__word\">\n                הו {currentWord.present[0].vocalization} \n              </p>\n              <p className=\"wordItem__transcription\">\n                {currentWord.present[0].transcription}\n              </p>\n              <p>\n                (он {currentWord.present[0].translation})\n              </p>\n            </div>\n            <div className=\"wordItem__form-container\">\n              <p className=\"wordItem__word\">\n                הי {currentWord.present[1].vocalization} \n              </p>\n              <p className=\"wordItem__transcription\">\n                {currentWord.present[1].transcription}\n              </p>\n              <p>\n                (она {currentWord.present[1].translation})\n              </p>\n            </div>\n            <div className=\"wordItem__form-container\">\n              <p className=\"wordItem__word\">\n                הם {currentWord.present[2].vocalization} \n              </p>\n              <p className=\"wordItem__transcription\">\n                {currentWord.present[2].transcription}\n              </p>\n              <p>\n                (они {currentWord.present[2].translation})\n              </p>\n            </div>\n            <div className=\"wordItem__form-container\">\n              <p className=\"wordItem__word\">\n                הן {currentWord.present[3].vocalization} \n              </p>\n              <p className=\"wordItem__transcription\">\n                {currentWord.present[3].transcription}\n              </p>\n              <p>\n                (они {currentWord.present[3].translation})\n              </p>\n            </div>\n          </div>\n          <div className=\"deckItem__arrow-container\" onClick={handleCBackClick}>\n            <img \n              src={arrow} \n              alt=\"Стрелка назад\" \n              className='deckItem__arrow'\n            />\n            <p className=\"deckItem__text\">Назад к теме</p>\n          </div>\n        </section>\n      </main>\n      <Footer />\n    </>\n  );\n}  \n\nexport default WordItemPage;\n","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\index.tsx",["195","196"],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\reportWebVitals.js",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\services\\reducers\\rootReducer.js",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\components\\App\\App.jsx",["197","198","199","200","201"],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\services\\reducers\\cardsReducer.js",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\services\\reducers\\currentDeckReducer.js",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\components\\PageNotFound\\PageNotFound.jsx",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\components\\Main\\Main.jsx",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\utils\\constants.js",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\services\\actions\\currentDeck.js",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\components\\Main\\AboutMe\\AboutMe.jsx",["202","203","204","205","206","207"],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\services\\reducers\\userReducer.js",[],[],{"ruleId":"208","severity":1,"message":"209","line":17,"column":53,"nodeType":"210","messageId":"211","endLine":17,"endColumn":55},{"ruleId":"208","severity":1,"message":"209","line":17,"column":100,"nodeType":"210","messageId":"211","endLine":17,"endColumn":102},{"ruleId":"212","severity":1,"message":"213","line":1,"column":28,"nodeType":"214","messageId":"215","endLine":1,"endColumn":36},{"ruleId":"212","severity":1,"message":"216","line":11,"column":10,"nodeType":"214","messageId":"215","endLine":11,"endColumn":20},{"ruleId":"212","severity":1,"message":"217","line":12,"column":10,"nodeType":"214","messageId":"215","endLine":12,"endColumn":27},{"ruleId":"218","severity":1,"message":"219","line":52,"column":6,"nodeType":"220","endLine":52,"endColumn":8,"suggestions":"221"},{"ruleId":"222","severity":1,"message":"223","line":29,"column":41,"nodeType":"224","messageId":"225","endLine":29,"endColumn":43},{"ruleId":"226","severity":1,"message":"227","line":11,"column":11,"nodeType":"228","messageId":"229","endLine":11,"endColumn":95,"fix":"230"},{"ruleId":"231","severity":1,"message":"232","line":12,"column":13,"nodeType":"228","endLine":12,"endColumn":64},{"ruleId":"226","severity":1,"message":"227","line":17,"column":11,"nodeType":"228","messageId":"229","endLine":17,"endColumn":90,"fix":"233"},{"ruleId":"231","severity":1,"message":"232","line":18,"column":13,"nodeType":"228","endLine":18,"endColumn":66},{"ruleId":"212","severity":1,"message":"234","line":1,"column":17,"nodeType":"214","messageId":"215","endLine":1,"endColumn":26},{"ruleId":"212","severity":1,"message":"213","line":1,"column":28,"nodeType":"214","messageId":"215","endLine":1,"endColumn":36},{"ruleId":"212","severity":1,"message":"235","line":6,"column":10,"nodeType":"214","messageId":"215","endLine":6,"endColumn":16},{"ruleId":"212","severity":1,"message":"236","line":13,"column":11,"nodeType":"214","messageId":"215","endLine":13,"endColumn":22},{"ruleId":"212","severity":1,"message":"237","line":6,"column":10,"nodeType":"214","messageId":"215","endLine":6,"endColumn":17},{"ruleId":"212","severity":1,"message":"238","line":3,"column":10,"nodeType":"214","messageId":"215","endLine":3,"endColumn":21},{"ruleId":"212","severity":1,"message":"239","line":11,"column":9,"nodeType":"214","messageId":"215","endLine":11,"endColumn":17},{"ruleId":"218","severity":1,"message":"240","line":46,"column":6,"nodeType":"220","endLine":46,"endColumn":21,"suggestions":"241"},{"ruleId":"218","severity":1,"message":"242","line":117,"column":6,"nodeType":"220","endLine":117,"endColumn":21,"suggestions":"243"},{"ruleId":"218","severity":1,"message":"244","line":96,"column":6,"nodeType":"220","endLine":96,"endColumn":8,"suggestions":"245"},{"ruleId":"218","severity":1,"message":"246","line":146,"column":6,"nodeType":"220","endLine":146,"endColumn":21,"suggestions":"247"},{"ruleId":"212","severity":1,"message":"234","line":1,"column":17,"nodeType":"214","messageId":"215","endLine":1,"endColumn":26},{"ruleId":"212","severity":1,"message":"248","line":7,"column":10,"nodeType":"214","messageId":"215","endLine":7,"endColumn":15},{"ruleId":"212","severity":1,"message":"249","line":16,"column":10,"nodeType":"214","messageId":"215","endLine":16,"endColumn":15},{"ruleId":"212","severity":1,"message":"250","line":16,"column":17,"nodeType":"214","messageId":"215","endLine":16,"endColumn":25},{"ruleId":"212","severity":1,"message":"251","line":17,"column":10,"nodeType":"214","messageId":"215","endLine":17,"endColumn":25},{"ruleId":"212","severity":1,"message":"252","line":17,"column":27,"nodeType":"214","messageId":"215","endLine":17,"endColumn":45},{"ruleId":"212","severity":1,"message":"253","line":18,"column":10,"nodeType":"214","messageId":"215","endLine":18,"endColumn":25},{"ruleId":"212","severity":1,"message":"254","line":19,"column":10,"nodeType":"214","messageId":"215","endLine":19,"endColumn":20},{"ruleId":"212","severity":1,"message":"255","line":19,"column":22,"nodeType":"214","messageId":"215","endLine":19,"endColumn":35},{"ruleId":"208","severity":1,"message":"209","line":17,"column":53,"nodeType":"210","messageId":"211","endLine":17,"endColumn":55},{"ruleId":"208","severity":1,"message":"209","line":17,"column":100,"nodeType":"210","messageId":"211","endLine":17,"endColumn":102},{"ruleId":"212","severity":1,"message":"234","line":1,"column":17,"nodeType":"214","messageId":"215","endLine":1,"endColumn":26},{"ruleId":"212","severity":1,"message":"213","line":1,"column":28,"nodeType":"214","messageId":"215","endLine":1,"endColumn":36},{"ruleId":"212","severity":1,"message":"238","line":9,"column":10,"nodeType":"214","messageId":"215","endLine":9,"endColumn":21},{"ruleId":"212","severity":1,"message":"239","line":18,"column":9,"nodeType":"214","messageId":"215","endLine":18,"endColumn":17},{"ruleId":"212","severity":1,"message":"256","line":19,"column":9,"nodeType":"214","messageId":"215","endLine":19,"endColumn":17},{"ruleId":"212","severity":1,"message":"234","line":1,"column":17,"nodeType":"214","messageId":"215","endLine":1,"endColumn":26},{"ruleId":"212","severity":1,"message":"213","line":1,"column":28,"nodeType":"214","messageId":"215","endLine":1,"endColumn":36},{"ruleId":"212","severity":1,"message":"235","line":5,"column":10,"nodeType":"214","messageId":"215","endLine":5,"endColumn":16},{"ruleId":"212","severity":1,"message":"257","line":5,"column":18,"nodeType":"214","messageId":"215","endLine":5,"endColumn":33},{"ruleId":"212","severity":1,"message":"258","line":5,"column":35,"nodeType":"214","messageId":"215","endLine":5,"endColumn":48},{"ruleId":"212","severity":1,"message":"236","line":12,"column":11,"nodeType":"214","messageId":"215","endLine":12,"endColumn":22},"no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'vocabulary' is defined but never used.","'removeCurrentDeck' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["259"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"260","text":"261"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"range":"262","text":"261"},"'useEffect' is defined but never used.","'topics' is defined but never used.","'currentDeck' is assigned a value but never used.","'current' is defined but never used.","'useSelector' is defined but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'startRepeating' and 'words'. Either include them or remove the dependency array.",["263"],"React Hook useEffect has missing dependencies: 'currentWord.word', 'isCorrect', and 'repeatingInput'. Either include them or remove the dependency array.",["264"],"React Hook useEffect has a missing dependency: 'makeUnswer'. Either include it or remove the dependency array.",["265"],"React Hook useEffect has missing dependencies: 'currentNum.meaning', 'isCorrect', and 'repeatingInput'. Either include them or remove the dependency array.",["266"],"'verbs' is defined but never used.","'words' is assigned a value but never used.","'setWords' is assigned a value but never used.","'wordsAreVisible' is assigned a value but never used.","'setWordsAreVisible' is assigned a value but never used.","'cardsAreVisible' is assigned a value but never used.","'repeatMode' is assigned a value but never used.","'setRepeatMode' is assigned a value but never used.","'navigate' is assigned a value but never used.","'topicsForRender' is defined but never used.","'partsOfSpeach' is defined but never used.",{"desc":"267","fix":"268"},[345,345]," rel=\"noreferrer\"",[591,591],{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},"Update the dependencies array to be: [dispatch, navigate]",{"range":"277","text":"278"},"Update the dependencies array to be: [startRepeating, words, wordsToRepeat]",{"range":"279","text":"280"},"Update the dependencies array to be: [currentWord.word, isCorrect, repeatingForm, repeatingInput]",{"range":"281","text":"282"},"Update the dependencies array to be: [makeUnswer]",{"range":"283","text":"284"},"Update the dependencies array to be: [currentNum.meaning, isCorrect, repeatingForm, repeatingInput]",{"range":"285","text":"286"},[2050,2052],"[dispatch, navigate]",[1553,1568],"[startRepeating, words, wordsToRepeat]",[3366,3381],"[currentWord.word, isCorrect, repeatingForm, repeatingInput]",[3314,3316],"[makeUnswer]",[4668,4683],"[currentNum.meaning, isCorrect, repeatingForm, repeatingInput]"]