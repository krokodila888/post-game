[{"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\index.tsx":"1","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\reportWebVitals.js":"2","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\services\\reducers\\rootReducer.js":"3","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\App\\App.jsx":"4","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\services\\reducers\\cardsReducer.js":"5","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\services\\reducers\\currentDeckReducer.js":"6","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\Main\\Main.jsx":"7","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\PageNotFound\\PageNotFound.jsx":"8","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\DeckItemPage\\DeckItemPage.jsx":"9","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\utils\\constants.js":"10","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\Footer\\Footer.jsx":"11","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\Header\\Header.jsx":"12","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\Main\\AboutMe\\AboutMe.jsx":"13","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\services\\actions\\currentDeck.js":"14","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\DeckItemPage\\WordCard\\WordCard.jsx":"15","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\DeckItemPage\\CardsHolder\\CardsHolder.jsx":"16","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\NumbersTrainPage\\NumbersTrainPage.jsx":"17","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\WordItemPage\\WordItemPage.jsx":"18","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\index.tsx":"19","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\reportWebVitals.js":"20","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\services\\reducers\\rootReducer.js":"21","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\services\\reducers\\userReducer.js":"22","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\services\\actions\\user.js":"23","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\components\\App\\App.tsx":"24","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\components\\PageNotFound\\PageNotFound.tsx":"25","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\components\\Main\\Main.tsx":"26","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\components\\NewGameScreen\\NewGameScreen.tsx":"27","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\components\\Prologue\\Prologue.tsx":"28","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\components\\GameScreen\\GameScreen.tsx":"29","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\components\\Header\\Header.tsx":"30","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\components\\Footer\\Footer.tsx":"31","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\components\\ResumeGameScreen\\ResumeGameScreen.tsx":"32","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\utils\\constants.ts":"33","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\utils\\types.ts":"34"},{"size":1000,"mtime":1696061014720,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":1695628188336,"results":"37","hashOfConfig":"36"},{"size":234,"mtime":1695628189837,"results":"38","hashOfConfig":"36"},{"size":2966,"mtime":1700171386138,"results":"39","hashOfConfig":"36"},{"size":917,"mtime":1695628189752,"results":"40","hashOfConfig":"36"},{"size":720,"mtime":1695628189798,"results":"41","hashOfConfig":"36"},{"size":362,"mtime":1695628188958,"results":"42","hashOfConfig":"36"},{"size":950,"mtime":1700171418553,"results":"43","hashOfConfig":"36"},{"size":7950,"mtime":1700171904783,"results":"44","hashOfConfig":"36"},{"size":135931,"mtime":1700172142168,"results":"45","hashOfConfig":"36"},{"size":802,"mtime":1695668282440,"results":"46","hashOfConfig":"36"},{"size":947,"mtime":1695628188846,"results":"47","hashOfConfig":"36"},{"size":3911,"mtime":1700076565607,"results":"48","hashOfConfig":"36"},{"size":496,"mtime":1695628189693,"results":"49","hashOfConfig":"36"},{"size":2687,"mtime":1700164316984,"results":"50","hashOfConfig":"36"},{"size":5778,"mtime":1696064375753,"results":"51","hashOfConfig":"36"},{"size":7628,"mtime":1700071791578,"results":"52","hashOfConfig":"36"},{"size":4397,"mtime":1700164376729,"results":"53","hashOfConfig":"36"},{"size":1984,"mtime":1712412853014,"results":"54","hashOfConfig":"55"},{"size":362,"mtime":1695628188336,"results":"56","hashOfConfig":"55"},{"size":150,"mtime":1709733272498,"results":"57","hashOfConfig":"55"},{"size":1277,"mtime":1712613784758,"results":"58","hashOfConfig":"55"},{"size":898,"mtime":1710087807808,"results":"59","hashOfConfig":"55"},{"size":1605,"mtime":1712409538510,"results":"60","hashOfConfig":"55"},{"size":925,"mtime":1712407950960,"results":"61","hashOfConfig":"55"},{"size":7509,"mtime":1712671586645,"results":"62","hashOfConfig":"55"},{"size":6525,"mtime":1712604814277,"results":"63","hashOfConfig":"55"},{"size":2358,"mtime":1712641256704,"results":"64","hashOfConfig":"55"},{"size":15250,"mtime":1712642161510,"results":"65","hashOfConfig":"55"},{"size":869,"mtime":1712408985588,"results":"66","hashOfConfig":"55"},{"size":1258,"mtime":1712414920830,"results":"67","hashOfConfig":"55"},{"size":10202,"mtime":1712663930561,"results":"68","hashOfConfig":"55"},{"size":12046,"mtime":1712606092999,"results":"69","hashOfConfig":"55"},{"size":737,"mtime":1712604207135,"results":"70","hashOfConfig":"55"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},"uagjdl",{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"140"},"1xzip5s",{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"140"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"140"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"140"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"186","usedDeprecatedRules":"140"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\index.tsx",["198","199"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\nimport App from './components/App/App';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './services/reducers/rootReducer.js';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport { BrowserRouter } from 'react-router-dom';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\") as HTMLFormElement);\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>\n);\n\nreportWebVitals();\n","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\reportWebVitals.js",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\services\\reducers\\rootReducer.js",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\App\\App.jsx",["200","201","202","203"],[],"import React, { useEffect, useState } from \"react\";\nimport { Routes, Route } from 'react-router-dom';\nimport Main from '../Main/Main.jsx';\nimport PageNotFound from '../PageNotFound/PageNotFound.jsx';\nimport DeckItemPage from '../DeckItemPage/DeckItemPage.jsx';\nimport WordItemPage from '../WordItemPage/WordItemPage.jsx';\nimport NumbersTrainPage from '../NumbersTrainPage/NumbersTrainPage.jsx';\nimport './App.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { vocabulary, topics, verbs } from \"../../utils/constants.js\";\nimport { removeCurrentDeck, setCurrentDeck, setCurrentWord  } from '../../services/actions/currentDeck.js';\n\nfunction App() {\n\n  const { currentDeck } = useSelector(state => state.currentDeckReducer);\n  const { currentWord } = useSelector(state => state.currentDeckReducer);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(()=> {\n    let aa;\n    let aaa;\n    //console.log(window.location.pathname.slice(8));\n    const adress = window.location.pathname.slice(8);\n    const firstPos = adress.indexOf('/');\n    /*console.log(firstPos);\n    console.log(window.location.pathname.slice(9 + firstPos));\n    console.log(window.location.pathname.substr(8, firstPos));*/\n    if (firstPos !== -1) {\n      aa = topics.filter(item => item.enTopic === window.location.pathname.substr(8, firstPos));\n      aaa = verbs.filter(item => item.enTranslation === window.location.pathname.slice(9 + firstPos));\n      //console.log(aaa);\n    }\n    else {\n      aa = topics.filter(item => item.enTopic === window.location.pathname.slice(8));\n    };\n    //console.log(aa);\n    if (aa !== undefined && aa) {\n      dispatch(setCurrentDeck(aa[0]));\n    };\n    if (aaa !== undefined && aaa) {\n      //console.log(aaa[0]);\n      dispatch(setCurrentWord(aaa[0]));\n    };\n    if (aa && aaa && aa.length !== 0 && aaa.length === 0) {\n      navigate(`/topics/${aa[0].enTopic}`);\n    }\n    if ((!aa && !aaa) || (aa.length === 0)) {\n      navigate(`/`);\n    }\n  }, [])\n\n  return (\n    <>\n      <div className=\"page\">\n        <Routes>\n          <Route \n            exact path=\"/\" \n            element={\n              <Main />\n            }>  \n          </Route>\n          <Route \n            path=\"*\" \n            element={\n              <PageNotFound/>\n            }>\n          </Route>\n          <Route \n            path=\"/numbers\" \n            element={\n              <NumbersTrainPage/>\n            }>\n          </Route>\n          {currentDeck !==null && \n          <Route \n            path=\"/topics/:deckItem\" \n            element={\n              <DeckItemPage />\n            }\n          >\n          </Route>}\n          {currentWord !==null && \n          <Route \n            path=\"/topics/:deckItem/:wordItem\" \n            element={\n              <WordItemPage />\n            }\n          >\n          </Route>}\n        </Routes>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\services\\reducers\\cardsReducer.js",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\services\\reducers\\currentDeckReducer.js",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\Main\\Main.jsx",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\PageNotFound\\PageNotFound.jsx",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\DeckItemPage\\DeckItemPage.jsx",["204"],[],"import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport Header from '../Header/Header.jsx';\nimport Footer from '../Footer/Footer.jsx';\nimport CardsHolder from './CardsHolder/CardsHolder.jsx';\nimport './DeckItemPage.css';\nimport WordCard from './WordCard/WordCard.jsx';\nimport { vocabulary } from \"../../utils/constants.js\";\nimport arrow from '../../images/arrow2.png';\nimport magnifier from '../../images/magn.png';\nimport { removeCurrentDeck } from '../../services/actions/currentDeck.js';\nimport PageNotFound from '../PageNotFound/PageNotFound.jsx';\n\nfunction DeckItemPage() {\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [words, setWords] = useState([]);\n  const [filteredWords, setFilteredWords] = useState([]);\n  const [wordsAreVisible, setWordsAreVisible] = useState(true);\n  const [cardsAreVisible, setCardsAreVisible] = useState(false);\n  const [repeatMode, setRepeatMode] = useState(false);\n  const [search, setSearch] = useState('');\n  const { currentDeck } = useSelector(state => state.currentDeckReducer);\n\n  useEffect(() => {\n    if (search !== '')\n  {setFilteredWords(words.filter((item) => \n    {if (!item.ruTopic.includes('Глаголы')) return (\n        (item.word.toLowerCase().includes(search.toLowerCase()) ) \n        || (item.vocalization.toLowerCase().includes(search.toLowerCase()) )\n        || (item.translation.toLowerCase().includes(search.toLowerCase()) )\n        || (item.transcription.toLowerCase().includes(search.toLowerCase()) )\n      );\n    if (item.ruTopic.includes('Глаголы')) return ((\n        item.word.toLowerCase().includes(search.toLowerCase()) ) \n      || (item.vocalization.toLowerCase().includes(search.toLowerCase()) )\n      || (item.translation.toLowerCase().includes(search.toLowerCase()) )\n      || (item.transcription.toLowerCase().includes(search.toLowerCase()) )\n      || (item.infinitive.translation.toLowerCase().includes(search.toLowerCase()) )\n      || (item.infinitive.word.toLowerCase().includes(search.toLowerCase()) )\n      )\n      || (item.infinitive.vocalization.toLowerCase().includes(search.toLowerCase()) )\n      || (item.infinitive.transcription.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[0].vocalization.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[1].vocalization.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[2].vocalization.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[3].vocalization.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[0].word.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[1].word.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[2].word.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[3].word.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[0].transcription.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[1].transcription.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[2].transcription.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[3].transcription.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[0].translation.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[1].translation.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[2].translation.toLowerCase().includes(search.toLowerCase()) )\n      || (item.present[3].translation.toLowerCase().includes(search.toLowerCase()) )\n    }\n    ))}\n    else {setFilteredWords(words)}\n  }, [words, search])\n\n  useEffect(()=> {\n    setSearch('');\n  }, [])\n\n  /*useEffect(()=> {\n    console.log(filteredWords);\n  }, [filteredWords])\n\n  useEffect(()=> {\n    console.log(search);\n  }, [search])*/\n\n  useEffect(()=> {\n    let aaa;\n    if (currentDeck && currentDeck !== null) {\n      aaa = vocabulary.filter(item => item.ruTopic.includes(currentDeck.ruTopic));\n      setWords(aaa);\n    };\n    if (currentDeck && currentDeck !== null && currentDeck.ruTopic === 'Все') {\n      setWords(vocabulary);\n    }\n  }, [currentDeck])\n\n  useEffect(()=> {\n    setFilteredWords(words);\n  }, [words])\n\n  function handleClick() {\n    dispatch(removeCurrentDeck());\n    navigate(`/`);\n  }\n\n  function handleTraunNumbersClick() {\n    dispatch(removeCurrentDeck());\n    navigate(`/numbers`);\n  }\n\n  function handleCloseModesClick() {\n    setWordsAreVisible(true);\n    setCardsAreVisible(false);\n    setRepeatMode(false);\n  }\n\n  function handleRepeatModeClick() {\n    setWordsAreVisible(false);\n    setRepeatMode(true);\n  }\n\n  function handleCardsModeClick() {\n    setCardsAreVisible(true);\n  }\n\n  return (\n    <> {(!currentDeck || currentDeck === null || currentDeck === undefined) ? <PageNotFound /> : <>\n      <Header />\n      <main className=\"main__content1\">\n        <section className=\"deckItem__content2\">\n          <div className=\"deckItem__title-container\">\n            {currentDeck && currentDeck !== null &&\n            <>\n              <h1 className=\"deckItem__title\">\n              Слова по теме: {currentDeck.ruTopic}\n            </h1>\n            <div className=\"deckItem__title-container1\" onClick={handleClick}>\n              <img \n                src={arrow} \n                alt=\"Стрелка назад\" \n                className='deckItem__arrow1'\n              />\n              <p className=\"deckItem__text1\">На главную</p>\n            </div>\n            </>\n            }\n          </div>\n          {wordsAreVisible && !cardsAreVisible && !repeatMode &&\n            <form className=\"searchForm__form\">\n              <div className=\"searchForm__input-container\">\n                <input \n                  className=\"searchForm__input\" \n                  type=\"name\" \n                  name=\"search\" \n                  id=\"search\" \n                  placeholder=\"Введите слово\" \n                  required \n                  onChange={e => setSearch(e.target.value)}/>\n                  <img className=\"searchForm__img\" src={magnifier} alt=\"Лупа\"></img>\n                </div>\n            </form>\n          }\n          {wordsAreVisible && currentDeck !== null && words.length !== 0 && filteredWords !== 0 &&\n            <div className=\"deckItem__words\">\n              {filteredWords.map((item, i) => (\n                <WordCard key={i} item={item} cardsAreVisible={cardsAreVisible}/>))\n              }\n            </div>\n          }\n          {!wordsAreVisible && repeatMode &&\n            <CardsHolder words={words} handleCloseModesClick={handleCloseModesClick} />\n          }\n          {wordsAreVisible && !cardsAreVisible &&\n          <div className=\"decks__button-container\">\n            <button className=\"deckItem__train-button\" onClick={handleCardsModeClick}>\n              Учить карточки\n              </button>\n            <button className=\"deckItem__train-button\" onClick={handleRepeatModeClick}>\n              Печатать слова\n            </button>\n            {wordsAreVisible && !cardsAreVisible && !repeatMode && currentDeck.ruTopic === 'Числа' &&\n            <button className=\"deckItem__train-button\" onClick={handleTraunNumbersClick}>\n              Тренировать числа\n            </button>\n            }\n          </div>}\n          {!repeatMode && cardsAreVisible && \n            <div className=\"deckItem__arrow-container\" onClick={handleCloseModesClick}>\n              <img \n                src={arrow} \n                alt=\"Стрелка назад\" \n                className='deckItem__arrow1'\n              />\n              <p className=\"deckItem__text1\">Назад к теме</p>\n            </div>\n          }\n        </section>\n      </main>\n      <Footer />\n      </>\n        }\n    </>\n  );\n}  \n\nexport default DeckItemPage;\n","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\utils\\constants.js",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\Footer\\Footer.jsx",["205","206","207","208"],[],"import './footer.css';\nimport telegram from '../../images/tlg.png';\nimport github from '../../images/github.png';\n\nfunction Footer() {\n\n  return (\n    <footer className=\"footer\">\n      <ul className=\"footer-wrap\">\n        <li className=\"footer__link\">\n          <a href=\"https://github.com/krokodila888\" className=\"footer__link1\" target=\"_blank\">\n            <img className=\"footer__social-icon\" src={github}/>\n              Мой Гитхаб\n          </a>\n        </li>\n        <li className=\"footer__link\">\n          <a href='https://t.me/e_kurakina888' className=\"footer__link1\" target=\"_blank\">\n            <img className=\"footer__social-icon\" src={telegram}/>\n            (пишите об ошибках)\n          </a>\n        </li>\n      </ul>\n    </footer>\n  );\n}\n  \nexport default Footer;",[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\Header\\Header.jsx",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\Main\\AboutMe\\AboutMe.jsx",["209","210","211","212"],[],"import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport './AboutMe.css';\nimport photo from '../../../images/photo1.jpg';\nimport { topics, topicsForRender, partsOfSpeach } from '../../../utils/constants';\nimport { setCurrentDeck } from '../../../services/actions/currentDeck.js';\n\nfunction AboutMe() {\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { currentDeck } = useSelector(state => state.currentDeckReducer);\n\n  function setDeck(item) {\n    dispatch(setCurrentDeck(item));\n    navigate(`/topics/${item.enTopic}`);\n  };\n\n  return (\n    <>\n    <section className=\"aboutMe__content\" id=\"AboutMe\">\n      <div className='aboutMe__text-block'>\n        <div className='aboutMe__column'>\n          <div className='aboutMe__column1'>\n            <p className=\"aboutMe__status-text\">\n            !שלום\n            <br/>\n              Я Женя, и я учу иврит.\n            </p>\n            <p className=\"aboutMe__text\">\n              А еще я учу JavaScript и хочу, чтобы одно работало на другое (и бонусом - чтобы однажды меня взяли на работу в айти). Будет здорово, если эта штука еще кому-нибудь пригодится.\n            </p>\n            <p className=\"aboutMe__text\">\n              Пока слов немного и по конкретному учебнику для начинающих. С хорошей вероятностью будет пополняться)\n            </p>\n          </div>\n        </div>        \n        <div className='aboutMe__column'>\n          <img src={photo} alt=\"Фото Женечки, ужасно симпатичное\" className=\"aboutMe__photo\" />\n        </div>      \n      </div>\n    </section>\n    <section className=\"decks__main-content\" id=\"Main-decks\">\n      <div className=\"decks__content-wrap\">\n        <div className=\"decks__item\" onClick={() => {setDeck({\n          ruTopic: 'Все',\n          enTopic: 'All',\n        })}}>\n          <p className=\"decks__main-item-text\">\n            Все слова\n          </p>\n          <p className=\"decks__grey-item-text\">\n            с поиском\n          </p>\n        </div>\n        <div className=\"decks__middle-item\" onClick={() => {setDeck({\n          ruTopic: 'Глаголы',\n          enTopic: 'Verbs',\n        })}}>\n          <p className=\"decks__main-item-text\">\n            Глаголы\n          </p>\n          <p className=\"decks__grey-item-text\">\n            и их формы\n          </p>\n        </div>\n        <div className=\"decks__item\" onClick={() => {setDeck({\n          ruTopic: 'Числа',\n          enTopic: 'Numbers',\n        })}}>\n          <p className=\"decks__main-item-text\">\n            Числа\n          </p>\n          <p className=\"decks__grey-item-text\">\n            и тренажер к ним\n          </p>\n        </div>\n      </div>\n    </section>\n    <section className=\"decks__content\" id=\"Decks\">\n      <p className=\"aboutMe__title-text\">\n        Части речи\n      </p>\n      <div className=\"decks__content-wrap\">\n      {partsOfSpeach.map((item, i) => (\n        <div key={i} className=\"decks__item\" onClick={() => {setDeck(item)}}>\n          <p className=\"decks__item-text\">\n            {item.ruTopic}\n          </p>\n        </div>))\n      }\n      </div>\n      <p className=\"aboutMe__title-text\">\n        Темы\n      </p>\n      <div className=\"decks__content-wrap\">\n      {topicsForRender.map((item, i) => (\n        <div key={i} className=\"decks__item\" onClick={() => {setDeck(item)}}>\n          <p className=\"decks__item-text\">\n            {item.ruTopic}\n          </p>\n        </div>))\n      }\n      </div>\n    </section>\n    </>\n  );\n}  \n\nexport default AboutMe; \n",[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\services\\actions\\currentDeck.js",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\DeckItemPage\\WordCard\\WordCard.jsx",["213"],[],"import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport around from '../../../images/around.png';\nimport './WordCard.css';\nimport { current } from \"@reduxjs/toolkit\";\nimport { setCurrentWord} from '../../../services/actions/currentDeck.js';\n\nfunction WordCard(props) {\n\n  const {item, cardsAreVisible } = props;\n  const { currentDeck } = useSelector(state => state.currentDeckReducer);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const [hintIsVisible, setHintIsVisible] = useState(false);\n  const [backIsVisible, setBackIsVisible] = useState(false);\n\n  function handleClick() {\n    setHintIsVisible(!hintIsVisible);\n  }\n\n  function handleIconClick() {\n    setBackIsVisible(!backIsVisible);\n  }\n\n  function setText() {\n    if (hintIsVisible) return `${item.transcription}`; else return 'Подсказка'\n  }\n\n  function setVerb() {\n    if (currentDeck) {\n      dispatch(setCurrentWord(item));\n      /*console.log(item);\n      console.log(item.enTranslation);*/\n      /*navigate(`/topics/Verbs/${item.enTranslation}`);*/\n      navigate(`/topics/${currentDeck.enTopic}/${item.enTranslation}`);\n    }\n  }\n\n  return (\n    <div className=\"wordCard\">\n      {!backIsVisible && \n      <>\n        {cardsAreVisible &&         \n        <p className=\"word\">\n          {item.translation}\n        </p>}\n        {!cardsAreVisible && \n        <>\n          <p className=\"word\">\n            {item.vocalization}\n          </p>\n          <p className=\"translation\">\n            {item.translation}\n          </p>\n          <p className=\"translation\">\n            {item.transcription}\n          </p>\n        </>\n        }\n        {cardsAreVisible && \n        <>\n          <p className=\"translation1 translation2\" onClick={handleClick}>\n            {setText()}\n          </p>\n          <img \n            src={around} \n            alt=\"Стрелка переворота\" \n            className='wordCard__img'\n            onClick={handleIconClick}\n          />\n        </>\n        }\n      </>\n      }\n      {backIsVisible && \n      <>\n        <p className=\"word\">\n          {item.vocalization}\n        </p>\n        <p className=\"translation1\">\n          {item.transcription}\n        </p>\n        <img \n          src={around} \n          alt=\"Стрелка переворота\" \n          className='wordCard__img'\n          onClick={handleIconClick}/>\n        </>\n      }\n      {item && item.ruTopic.includes('Глаголы') &&         \n        <p className=\"text\" onClick={setVerb}>\n          cмотреть формы\n        </p>}\n    </div>\n  );\n}  \n\nexport default WordCard;\n","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\DeckItemPage\\CardsHolder\\CardsHolder.jsx",["214","215","216","217"],[],"import React, { useEffect, useState } from \"react\";\nimport './CardsHolder.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport arrow from '../../../images/arrow2.png';\nimport arrow1 from '../../../images/repeat.svg';\n\nfunction CardsHolder(props) {\n\n  const { words, handleCloseModesClick } = props;\n\n  const dispatch = useDispatch();\n  const [repeatMode, setRepeatMode] = useState(true);\n  const [showWord, setShowWord] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [currentWord, setCurrentWord] = useState(null);\n  const [repeatingForm, setMeaning] = useState({ word: '' });\n  const [repeatedWords, setRepeatedWords] = useState([]);\n  const [wordsToRepeat, setWordsToRepeat] = useState([]);\n  const [hintIsVisible, setHintIsVisible] = useState(false);\n  const repeatingInput = document.getElementById('cardsHolderRepeatingInput');\n\n  function startRepeating() {\n    setRepeatMode(true);\n    setCurrentWord(wordsToRepeat[0]);\n  }\n\n  function setText(item) {\n    if (hintIsVisible) return `${item.transcription}`; else return 'Подсказка'\n  }\n\n  useEffect(()=> {\n    if (words && words.length !== 0) {\n      let aaa = words;\n      aaa.forEach(item => item.number = Math.floor(Math.random() * 10) + 1);\n      aaa.sort(function (a, b) {\n        return a.number - b.number;\n      });\n      setWordsToRepeat(aaa);\n    }    \n  }, [words])\n\n  useEffect(()=> {\n    if (words && words.length !== 0 && wordsToRepeat && wordsToRepeat.length === words.length) \n    startRepeating();\n    //console.log('start');\n  }, [wordsToRepeat])\n\n  /*useEffect(()=> {\n    console.log(currentWord)\n  }, [currentWord])*/\n\n  useEffect(()=> {\n    console.log(wordsToRepeat)\n  }, [wordsToRepeat])\n\n  function showHint() {\n    setHintIsVisible(true);\n  }\n\n  function showTranslation() {\n    setShowWord(true);\n  };\n\n  const onRepeatChange = e => {\n    setMeaning({ ...repeatingForm, [e.target.name]: e.target.value });\n  };\n\n  function stopRepeating() {\n    setHintIsVisible(false);\n    setRepeatMode(false);\n    setShowWord(false);\n    setIsCorrect(false);\n    setMeaning({ ...repeatingForm, word: '' });\n    handleCloseModesClick();\n  }\n\n  function repeatAgain() {\n    setShowWord(false);\n    setIsCorrect(false);\n    setWordsToRepeat(words);\n    setHintIsVisible(false);\n  }\n\n  function word() {\n    if (currentWord && currentWord !== null) {\n    return (\n    <>\n      <div className=\"cardsHolder__title-raw\">\n        <p className=\"cardsHolder__title\">\n          {currentWord.translation}\n        </p>\n        <p className=\"cardsHolder__hint\" onClick={showHint}>\n          {setText(currentWord)}\n        </p>\n      </div>\n      {showWord && \n      <>\n        <p className=\"cardsHolder__title\">\n          {currentWord.word}\n        </p>\n        {currentWord && currentWord !== null && currentWord.word !== 'Правда все.' &&\n          <p>\n            Рекомендуется напечатать правильный вариант все равно: так он лучше запомнится\n          </p>\n        }\n      </>}\n    </>)}\n  }\n  \n  useEffect(()=> {\n    if (repeatingInput && (currentWord.word === repeatingForm.word)) \n    {setIsCorrect(true);\n    repeatingInput.classList.add('cardsHolder__input_active');};\n    if (repeatingInput && (currentWord.word !== repeatingForm.word) && isCorrect) {\n      setIsCorrect(false);\n      repeatingInput.classList.remove('cardsHolder__input_active');};\n  }, [repeatingForm])\n\n  function nextWord1() {\n    setRepeatedWords([...repeatedWords, currentWord]);\n    setShowWord(false);\n    setIsCorrect(false);\n    setHintIsVisible(false);\n    setMeaning({ ...repeatingForm, word: '' });\n    repeatingInput.classList.remove('cardsHolder__input_active');\n    if (wordsToRepeat.length > 1) {setCurrentWord(wordsToRepeat[1]); \n    setWordsToRepeat(wordsToRepeat.slice(1));}\n    else {setCurrentWord({word: 'Правда все.', translation: 'Вы повторили все!', transcription: 'Вы можете начать с начала'})}\n  }\n\n  return (\n    <>\n    <section className=\"cardsHolder__content\" id=\"cardsHolder\">\n      {repeatMode && \n      <div className='cardsHolder__form'>\n        <div>\n          {word()}\n        </div>\n        <input \n          placeholder=\"Место для слова\" \n          value={repeatingForm.word} \n          id='cardsHolderRepeatingInput'\n          type=\"text\"\n          name=\"word\" \n          onChange={onRepeatChange}\n          required\n          className='cardsHolder__input'\n          autoComplete=\"off\"\n          autoCorrect=\"off\" \n          autoCapitalize=\"off\" \n          spellCheck=\"false\" />\n        <div className='cardsHolder__button-block'>\n          <button \n            className='cardsHolder__button'\n            onClick={showTranslation}>\n              Показать слово\n          </button>\n          <button \n            className='cardsHolder__button'\n            onClick={nextWord1}>\n              Следующая\n          </button>\n        </div>\n      </div>}\n      {currentWord && currentWord !== null && currentWord.word === 'Правда все.' &&\n      <div className=\"cardsHolder__arrow-container\" onClick={repeatAgain}>\n        <img \n          src={arrow1} \n          alt=\"Стрелка назад\" \n          className='cardsHolder__arrow1'\n        />\n        <p className=\"deckItem__text\">Повторять снова</p>\n      </div>}\n      {\n      <div className=\"cardsHolder__arrow-container\" onClick={stopRepeating}>\n        <img \n          src={arrow} \n          alt=\"Стрелка назад\" \n          className='deckItem__arrow'\n        />\n        <p className=\"deckItem__text\">Назад к теме</p>\n      </div>}\n    </section>\n    </>\n  );\n}  \n\nexport default CardsHolder; \n","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\NumbersTrainPage\\NumbersTrainPage.jsx",["218","219"],[],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport Header from '../Header/Header.jsx';\nimport Footer from '../Footer/Footer.jsx';\nimport './NumbersTrainPage.css';\nimport { vocabulary } from \"../../utils/constants.js\";\nimport arrow from '../../images/arrow2.png';\nimport { removeCurrentDeck, setCurrentDeck } from '../../services/actions/currentDeck.js';\n\nfunction NumbersTrainPage() {\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [currentNum, setCurrentNum] = useState(null);\n  const [showNum, setShowNum] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [hintIsVisible, setHintIsVisible] = useState(false);\n  const words = vocabulary.filter(item => item.ruTopic.includes('Числа'));\n  const [repeatingForm, setMeaning] = useState({ word: '' });\n  const repeatingInput = document.getElementById('cardsHolderRepeatingNumInput');\n\n\n  function makeUnswer() {\n    let num1 = Math.floor(Math.random() * 100) + Math.floor(Math.random() * 10);\n    let meaning1;\n    let transcription1;\n    if (num1 < 21 && words !== null) {\n      meaning1 = words.filter(item => item.num === num1)[0].word;\n      transcription1 = words.filter(item => item.num === num1)[0].transcription;\n    }\n    else if (num1 > 20 && num1 < 101 && num1 % 10 === 0) {\n      meaning1 = words.filter(item => item.num === num1)[0].word;\n      transcription1 = words.filter(item => item.num === num1)[0].transcription;\n    }\n    else if (num1 > 20 && num1 < 110 && num1 !== 100) {\n      let tens1;\n      let tens2;\n      let tens;\n      if (num1 > 20 && num1 < 100) {\n        tens1 = String(num1)[0];\n        tens2 = Number(tens1) * 10;\n      };\n      if (num1 > 99) {\n        tens2 = 100;\n      };\n\n      tens = words.filter(item => item.num === tens2)[0].word;\n      let tensTranscription;\n      tensTranscription = words.filter(item => item.num === tens2)[0].transcription;\n      let lastNum1 = num1 % 10;\n      let lastNum;\n      if (lastNum1 === 1) {\n        lastNum = ' ואחת';\n        transcription1 = `${tensTranscription} вэ ахАт`;\n      };\n      if (lastNum1 === 2) {\n        lastNum = ' ושתיים';\n        transcription1 = `${tensTranscription} у штАйм`;\n      };\n      if (lastNum1 === 3) {\n        lastNum = ' ןשלוש';\n        transcription1 = `${tensTranscription} вэ шалОш`;\n      };\n      if (lastNum1 === 4) {\n        lastNum = ' וארבע';\n        transcription1 = `${tensTranscription} вэ арбА`;\n      };\n      if (lastNum1 === 5) {\n        lastNum = ' וחמש';\n        transcription1 = `${tensTranscription} вэ хамЭш`;\n      };\n      if (lastNum1 === 6) {\n        lastNum = ' ושש';\n        transcription1 = `${tensTranscription} ва шеш`;\n      };\n      if (lastNum1 === 7) {\n        lastNum = ' ושבע';\n        transcription1 = `${tensTranscription} ва шЭва`;\n      };\n      if (lastNum1 === 8) {\n        lastNum = ' ושמונה';\n        transcription1 = `${tensTranscription} у шмОнэ`;\n      };\n      if (lastNum1 === 9) {\n        lastNum = ' ותשע';\n        transcription1 = `${tensTranscription} ва тЭша`;\n      };\n      meaning1 = `${tens}${lastNum}`;\n    }\n    setCurrentNum({num: num1, meaning: meaning1, transcription: transcription1});\n  }\n\n  useEffect(()=> {\n    makeUnswer()\n  }, [])\n\n  function showHint() {\n    setHintIsVisible(true);\n  }\n  function setText() {\n    if (hintIsVisible) return `${currentNum.transcription}`; else return 'Подсказка'\n  }\n\n  function word() {\n    if (currentNum && currentNum !== null) {\n    return (\n    <>\n      <div className=\"cardsHolder__title-raw\">\n        <p className=\"cardsHolder__title\">\n          {currentNum.num}\n        </p>\n        <p className=\"cardsHolder__hint\" onClick={showHint}>\n          {setText()}\n        </p>\n      </div>\n      {showNum && \n      <>\n        <p className=\"cardsHolder__title\">\n          {currentNum.meaning}\n        </p>\n        {currentNum && currentNum !== null &&\n          <p>\n            Рекомендуется напечатать правильный вариант все равно: так он лучше запомнится\n          </p>\n        }\n      </>}\n    </>)}\n  }\n  \n  function showTranslation() {\n    setShowNum(true);\n  };\n\n  const onRepeatChange = e => {\n    setMeaning({ ...repeatingForm, [e.target.name]: e.target.value });\n  };\n\n  useEffect(()=> {\n    if (repeatingInput && (currentNum.meaning === repeatingForm.word)) \n    {setIsCorrect(true);\n    repeatingInput.classList.add('cardsHolder__input_active');};\n    if (repeatingInput && (currentNum.meaning !== repeatingForm.word) && isCorrect) {\n      setIsCorrect(false);\n      repeatingInput.classList.remove('cardsHolder__input_active');};\n  }, [repeatingForm])\n\n  function handleClick() {\n    dispatch(removeCurrentDeck());\n    navigate(`/`);\n  }\n\n  function nextWord1() {\n    setShowNum(false);\n    setIsCorrect(false);\n    setHintIsVisible(false);\n    setMeaning({ ...repeatingForm, word: '' });\n    repeatingInput.classList.remove('cardsHolder__input_active');\n    makeUnswer();\n  }\n\n  function handleCloseModesClick() {\n    setShowNum(false);\n    setIsCorrect(false);\n    setHintIsVisible(false);\n    setMeaning({ ...repeatingForm, word: '' });\n    repeatingInput.classList.remove('cardsHolder__input_active');\n    dispatch(setCurrentDeck({\n      ruTopic: 'Числа',\n      enTopic: 'Numbers',\n    }));\n    navigate('/topics/Numbers');\n  }\n\n  return (\n    <>\n      <Header />\n      <main className=\"main__content1\">\n        <section className=\"deckItem__content\">\n          <div className=\"deckItem__title-container1\">\n            <h1 className=\"numbers__title\">\n              Запоминаем числа\n            </h1>\n            <div className=\"deckItem__title-container1\" onClick={handleClick}>\n              <img \n                src={arrow} \n                alt=\"Стрелка назад\" \n                className='deckItem__arrow'\n              />\n              <p className=\"deckItem__text\">На главную</p>\n            </div>\n          </div>\n          <div className='cardsHolder__form'>\n            <div>\n              {word()}\n            </div>\n            <input \n              placeholder=\"Место для слова\" \n              value={repeatingForm.word} \n              id='cardsHolderRepeatingNumInput'\n              type=\"text\"\n              name=\"word\" \n              onChange={onRepeatChange}\n              required\n              className='cardsHolder__input'\n              autoComplete=\"off\"\n              autoCorrect=\"off\" \n              autoCapitalize=\"off\" \n              spellCheck=\"false\" />\n            <div className='cardsHolder__button-block'>\n              <button \n                className='cardsHolder__button'\n                onClick={showTranslation}>\n                  Показать ответ\n              </button>\n              <button \n                className='cardsHolder__button'\n                onClick={nextWord1}>\n                  Следующее число\n              </button>\n            </div>\n          </div>\n          <div className=\"deckItem__arrow-container\" onClick={handleCloseModesClick}>\n            <img \n              src={arrow} \n              alt=\"Стрелка назад\" \n              className='deckItem__arrow'\n            />\n            <p className=\"deckItem__text\">Назад к теме</p>\n          </div>\n        </section>\n      </main>\n      <Footer />\n    </>\n  );\n}  \n\nexport default NumbersTrainPage;\n","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\ivrit-main\\src\\components\\WordItemPage\\WordItemPage.jsx",["220","221","222","223","224","225","226","227","228"],[],"import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport Header from '../Header/Header.jsx';\nimport Footer from '../Footer/Footer.jsx';\nimport './WordItemPage.css';\nimport { verbs } from \"../../utils/constants.js\";\nimport arrow from '../../images/arrow2.png';\nimport { removeCurrentDeck } from '../../services/actions/currentDeck.js';\nimport { removeCurrentWord } from '../../services/actions/currentDeck.js';\n\nfunction WordItemPage() {\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [words, setWords] = useState([]);\n  const [wordsAreVisible, setWordsAreVisible] = useState(true);\n  const [cardsAreVisible, setCardsAreVisible] = useState(false);\n  const [repeatMode, setRepeatMode] = useState(false);\n  const { currentDeck } = useSelector(state => state.currentDeckReducer);\n  const { currentWord } = useSelector(state => state.currentDeckReducer);\n\n  function handleClick() {\n    dispatch(removeCurrentDeck());\n    dispatch(removeCurrentWord());\n    navigate(`/`);\n  }\n\n  function handleCBackClick() {\n    console.log(document.referrer);\n    setCardsAreVisible(true);\n    dispatch(removeCurrentWord());\n    navigate(`/topics/${currentDeck.enTopic}`);\n  }\n\n  return (\n    <>\n      <Header />\n      <main className=\"main__content1\">\n        <section className=\"wordItem__content\">\n          <div className=\"wordItem__title-container\">\n            <div className=\"wordItem__titleTextContainer\">\n              <h1 className=\"wordItem__title\">Формы глагола </h1>\n              <p className=\"wordItem__title1\">\n                {currentWord.infinitive.vocalization} \n              </p> \n              <p className=\"wordItem__text-grey\">\n                {currentWord.infinitive.transcription}\n              </p>\n            </div>\n            <div className=\"wordItem__title-container1\" onClick={handleClick}>\n              <img \n                src={arrow} \n                alt=\"Стрелка назад\" \n                className='deckItem__arrow'\n              />\n              <p className=\"deckItem__text\">На главную</p>\n            </div>\n          </div>\n          <div className=\"wordItem__forms-container\">\n            <div className=\"wordItem__form-container\">\n              <p className=\"wordItem__word\">\n                הו {currentWord.present[0].vocalization} \n              </p>\n              <p className=\"wordItem__transcription\">\n                {currentWord.present[0].transcription}\n              </p>\n              <p>\n                (он {currentWord.present[0].translation})\n              </p>\n            </div>\n            <div className=\"wordItem__form-container\">\n              <p className=\"wordItem__word\">\n                הי {currentWord.present[1].vocalization} \n              </p>\n              <p className=\"wordItem__transcription\">\n                {currentWord.present[1].transcription}\n              </p>\n              <p>\n                (она {currentWord.present[1].translation})\n              </p>\n            </div>\n            <div className=\"wordItem__form-container\">\n              <p className=\"wordItem__word\">\n                הם {currentWord.present[2].vocalization} \n              </p>\n              <p className=\"wordItem__transcription\">\n                {currentWord.present[2].transcription}\n              </p>\n              <p>\n                (они {currentWord.present[2].translation})\n              </p>\n            </div>\n            <div className=\"wordItem__form-container\">\n              <p className=\"wordItem__word\">\n                הן {currentWord.present[3].vocalization} \n              </p>\n              <p className=\"wordItem__transcription\">\n                {currentWord.present[3].transcription}\n              </p>\n              <p>\n                (они {currentWord.present[3].translation})\n              </p>\n            </div>\n          </div>\n          <div className=\"deckItem__arrow-container\" onClick={handleCBackClick}>\n            <img \n              src={arrow} \n              alt=\"Стрелка назад\" \n              className='deckItem__arrow'\n            />\n            <p className=\"deckItem__text\">Назад к теме</p>\n          </div>\n        </section>\n      </main>\n      <Footer />\n    </>\n  );\n}  \n\nexport default WordItemPage;\n","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\index.tsx",["229","230","231"],[],"/*import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\nimport App from './components/App/App';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './services/reducers/rootReducer.js';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport { BrowserRouter } from 'react-router-dom';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\") as HTMLFormElement);\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>\n);\n\nreportWebVitals();*/\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\nimport App from './components/App/App';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './services/reducers/rootReducer.js';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport { BrowserRouter } from 'react-router-dom';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\") as HTMLFormElement);\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>\n);\n",[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\services\\reducers\\rootReducer.js",[],[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\services\\reducers\\userReducer.js",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\services\\actions\\user.js",[],[],"C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\components\\App\\App.tsx",["232","233","234","235","236","237"],[],"import React, { FC, useEffect, useState } from \"react\";\nimport { Routes, Route } from 'react-router-dom';\nimport Main from '../Main/Main';\nimport PageNotFound from '../PageNotFound/PageNotFound';\nimport './App.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { setUserName, setUserNick, clearUser } from '../../services/actions/user.js';\n\nconst App: FC = () => {\n\n  //const { currentDeck } = useSelector(state => state.currentDeckReducer);\n  //const { currentWord } = useSelector(state => state.currentDeckReducer);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { userName } = useSelector((state: any) => state.userReducer);\n\n  useEffect(() => {\n    console.log(localStorage)\n  }, [localStorage.userNick]);\n\n  useEffect(() => {\n    if ((localStorage.getItem('userName') !== (null || undefined)) &&\n    (localStorage.getItem('userNick') !== (null || undefined))) {\n      console.log(localStorage.getItem('userName'));\n      dispatch(setUserName(localStorage.getItem('userName')));\n      dispatch(setUserNick(localStorage.getItem('userNick')));\n    }\n  }, []);\n\n  /*useEffect(() => {\n    console.log(userName);\n  }, [userName]);*/\n\n  return (\n    <>\n      <div className=\"page\">\n        <Routes>\n          <Route \n            path=\"/\" \n            element={\n              <Main />\n            }>  \n          </Route>\n          <Route \n            path=\"*\" \n            element={\n              <PageNotFound/>\n            }>\n          </Route>\n        </Routes>\n      </div>\n    </>\n  );\n}\n\nexport default App;","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\components\\PageNotFound\\PageNotFound.tsx",["238","239"],[],"import React, { FC, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport './PageNotFound.css';\nimport arrow from '../../images/arrow2.png';\n\nconst PageNotFound: FC = () => {\n\n  const navigate = useNavigate();\n\n  function goBack() {\n    navigate('/');\n  }\n\n  return (\n    <>\n      <section className=\"pageNotFound\">\n        <h3 className=\"pageNotFound__title\">404</h3>\n        <p \n          className=\"pageNotFound__text\" >\n            Тут пока ничего нет.\n        </p>\n        <div className=\"deckItem__arrow-container\" onClick={goBack}>\n          <img \n            src={arrow} \n            alt=\"Стрелка назад\" \n            className='deckItem__arrow'\n          />\n            <p className=\"pageNotFound__text\">\n              Вернитесь на главную.\n            </p>\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default PageNotFound;\n","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\components\\Main\\Main.tsx",["240","241","242","243","244","245","246","247","248","249"],[],"import React, { FC, useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport pic1 from '../../images/main1.jpg';\nimport pic2 from '../../images/main2.jpg';\nimport pic3 from '../../images/main3.jpg';\nimport pic4 from '../../images/main4.jpg';\nimport pic5 from '../../images/main5.jpg';\nimport fone from '../../images/fone.jpg';\nimport start from '../../audio/start.mp3';\nimport pub from '../../audio/pub.mp3';\nimport { facts } from '../../utils/constants';\nimport './Main.css';\nimport Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\nimport NewGameScreen from '../NewGameScreen/NewGameScreen';\nimport GameScreen from '../GameScreen/GameScreen';\nimport Prologue from '../Prologue/Prologue';\nimport ResumeGameScreen from '../ResumeGameScreen/ResumeGameScreen';\nimport { setUserName, setUserNick, setProgress, setTemporaryProgress, clearUser } from '../../services/actions/user';\n\nconst Main: FC = () => {\n  \n  const { userName } = useSelector((state: any) => state.userReducer);\n  const [pic, setPic] = useState(1);\n  const [fact, setFact] = useState('Магистраль - восстановленная ветка железной дороги, проходящая от границ Эйсланда до запада Территорий');\n  const [screen, setScreen] = useState('main');\n  const [music, setMusic] = useState([start, start]);\n  const [musicOn, setMusicOn] = useState(false);\n  const [backFromGame, setBackFromGame] = useState(false);\n  const pubAudio = React.useRef<any>();\n  const startAudio = React.useRef<any>();\n  const dispatch = useDispatch();\n\n  //логика смены картинки\n  useEffect(() => {\n    const timer = setInterval(() => {\n      if (pic < 5) setPic(pic + 1);\n      if (pic === 5) setPic(1);\n    }, 12000);\n    return () => clearInterval(timer);\n  }, [pic]);\n\n  function getImgEffect() {\n    let res = Math.floor(Math.random() * (4 - 1) + 1);\n    if (res ===  1) return \"main__pic main__pic1\";\n    if (res === 2) return 'main__pic main__pic2'; \n    if (res === 3) return 'main__pic main__pic3' \n    return 'main__pic main__pic4'\n  }\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setFact(facts[Math.floor(Math.random() * (facts.length - 1))]);\n    }, 12000);\n    return () => clearInterval(timer);\n  }, [fact]);\n\n  //логика смены музыки\n  useEffect(() => {\n    if (screen === 'game' && musicOn) {\n        console.log('sound on pub!');\n        soundOnPub();\n    };\n    if (screen === 'main' && musicOn && backFromGame) {\n      soundOnMain();\n    };\n    if (screen === 'prologue' && musicOn && backFromGame) {\n      soundOnMain();\n    };\n    if (screen === 'newGame' && musicOn && backFromGame) {\n      soundOnMain();\n    };\n  }, [screen]);\n\n  function soundOn() {\n    console.log('start sound');\n    setMusicOn(true);\n    if (screen === ('main')) {\n      soundOnMain();\n    }\n    if (screen === ('newGame')) {\n      soundOnMain();\n    }\n    if (screen === ('prologue')) {\n      soundOnMain();\n    }\n    if (screen === 'game') {\n      soundOnPub();\n    }\n  }\n\n  function soundOff() {\n    console.log('stop sound');\n    setMusicOn(false);\n    startAudio.current.pause();\n    pubAudio.current.pause();\n  }\n\n  function soundOnPub() {\n    pubAudio.current.play();\n  }\n\n  function soundOnMain() { \n    startAudio.current.play();\n  }\n\n  function soundOff1() {\n    pubAudio.current.pause();\n    startAudio.current.pause();\n  }\n  \n  function goNext(x: string) {\n    if (screen === 'game') {\n      setBackFromGame(true);\n      pubAudio.current.pause();\n    }\n    if (screen !== 'game') {\n      setBackFromGame(false);\n      pubAudio.current.pause();\n    }\n    if (x === 'game') {\n      startAudio.current.pause();\n    }\n    setScreen(x);\n  }\n\n  function clear() {\n    localStorage.clear();\n    dispatch(clearUser());\n    console.log(localStorage)\n  }\n\n  return (\n    <>\n      <Header\n        goNext={goNext}/>\n      {(screen === 'main') &&\n      <main className=\"main__content\">\n        <img src={fone} alt=\"Серый фон\" className=\"main__fone\"/>\n        {pic === 1 && \n        <>\n          <img \n            src={pic1} \n            alt=\"Пейзажи постапокалиптического города\" \n            className={getImgEffect()}/>\n        </>\n        }\n        {pic === 2 && \n        <>\n          <img \n            src={pic2} \n            alt=\"Пейзажи постапокалиптического города\" \n            className={getImgEffect()}/>\n        </>\n        }\n        {pic === 3 && \n        <>\n          <img \n            src={pic3} \n            alt=\"Пейзажи постапокалиптического города\" \n            className={getImgEffect()}/>\n        </>\n        }\n        {pic === 4 && \n        <>\n          <img \n            src={pic4} \n            alt=\"Пейзажи постапокалиптического города\" \n            className={getImgEffect()}/>\n        </>\n        }\n        {pic === 5 && \n        <>\n          <img \n            src={pic5} \n            className={getImgEffect()}/>\n        </>\n        }\n        <div className=\"main__fact-block\">\n          <p>{fact}</p>\n         </div>\n        <nav className=\"main__button-block\">\n          <button className=\"button\" onClick={e => {goNext('prologue')}}>\n            Пролог\n            <span className=\"main__button-first span\"></span>\n            <span className=\"main__button-second span\"></span>\n            <span className=\"main__button-third span\"></span>\n            <span className=\"main__button-fourth span\"></span>\n          </button>\n          <button className=\"button\" onClick={e => {goNext('newGame')}}>\n            Новая игра\n            <span className=\"main__button-first span\"></span>\n            <span className=\"main__button-second span\"></span>\n            <span className=\"main__button-third span\"></span>\n            <span className=\"main__button-fourth span\"></span>\n          </button>\n          <button className=\"button\" onClick={e => {goNext('resume')}}>\n            Продолжить игру\n            <span className=\"main__button-first span\"></span>\n            <span className=\"main__button-second span\"></span>\n            <span className=\"main__button-third span\"></span>\n            <span className=\"main__button-fourth span\"></span>\n          </button>\n          {(userName) !== null ? \n          <p className=\"main__greetingText\">Привет, {userName}! Давно тебя не видели.</p> : <p className=\"main__greetingText\">Ну здравствуй, гость!</p>}\n          \n        </nav>\n      </main>\n      }\n      {(screen === 'newGame') && \n      <NewGameScreen \n        goNext={goNext}\n        screen={screen}\n      />}\n      {(screen === 'game') && \n      <GameScreen \n        goNext={goNext}\n        screen={screen}\n        /*setMusicOn={setMusicOn}*/\n      />\n      }\n      {(screen === 'prologue') && \n      <Prologue \n        goNext={goNext}\n        screen={screen}\n      />\n      }\n      {(screen === 'resume') && \n      <ResumeGameScreen \n        goNext={goNext}\n        screen={screen}\n      />\n      }\n      <>\n        <audio ref={pubAudio} src={pub} /*type='audio'*/ loop/>\n        <audio ref={startAudio} src={start} /*type='audio'*/ loop/>\n      </>\n      <Footer \n        musicOn={musicOn}\n        soundOn={soundOn}\n        soundOff={soundOff}/>\n    </>\n  );\n}  \n\nexport default Main;\n\n//<button onClick={clear}>Обнулить</button>","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\components\\NewGameScreen\\NewGameScreen.tsx",["250","251","252","253","254","255","256"],[],"import React, { FC, useEffect, useState, ChangeEvent } from \"react\";\nimport fone from '../../images/fone.jpg';\nimport plakat from '../../images/plakat1.png';\nimport './NewGameScreen.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setUserName, setUserNick, setProgress, clearUser } from '../../services/actions/user';\nimport { TNickList } from '../../utils/types';\n\ntype TNewGameProps = {\n  goNext: any;\n  screen: string;\n}\n\nconst NewGameScreen: FC<TNewGameProps> = ({ goNext, screen }) => {\n\n  //для себя - еще нужно предупреждение, что данные старой игры сотрутся!\n\n  const [form, setValue] = useState({ name: '', nick: 'Бродяга' });\n  const [button1, setButton1] = useState(false);\n  const [button2, setButton2] = useState(false);\n  const [button3, setButton3] = useState(false);\n  const [button4, setButton4] = useState(false);\n  const { userName, userNick } = useSelector((state: any) => state.userReducer);\n  const dispatch = useDispatch();\n  const nickList = React.useRef<any>();\n  const nameButton = React.useRef<any>();\n  const nameInput = React.useRef<any>();\n\n  function handleUser(evt: any) {\n    evt.preventDefault();\n    console.log(form);\n    dispatch(setUserName(form.name));\n    dispatch(setUserNick(form.nick));\n    setButton2(true);\n    //setButton1(false)\n  }\n\n  useEffect(() => {\n    if (screen !== 'newGame')\n    {setValue({ name: '', nick: '' });\n    setButton1(false);\n    setButton2(false);\n    setButton3(false);\n    setButton4(false);\n  }\n  }, []);\n\n  useEffect(() => {\n    if (screen !== 'newGame')\n    {setValue({ name: '', nick: '' });\n    setButton1(false);\n    setButton2(false);\n    setButton3(false);\n    setButton4(false);\n  }\n  }, []);\n\n  useEffect(() => {\n    console.log(form);\n  }, [form]);\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    console.log(form);\n    setValue({ ...form, [e.target.name]: e.target.value });\n    /*dispatch(setUserName(form.name));\n    dispatch(setUserNick(form.nick));*/\n  };\n\n  const onChangeNick = (e: ChangeEvent<HTMLSelectElement>) => {\n    if (nickList.current) {\n      setValue({ ...form, nick: nickList.current.value });\n    }\n  };\n\n  function handleClick() {\n    if (nameInput.current?.validity.valid) {\n      setButton1(true);\n    }\n  }\n\n  useEffect(() => {\n    if (!nameInput.current?.validity.valid) {\n      console.log('invalid name');\n      setButton1(false);\n    }\n  }, [form.name]);\n\n  //смотреть пролог\n  function onPrologueClick() {\n    setButton4(true);\n    setTimeout(() => {\n      console.log('start prologue');\n      goNext('prologue');\n      }, 3000);\n  }\n\n  //начать игру\n  function onStartClick() {\n    setButton3(true);\n    setTimeout(() => {\n      dispatch(setProgress('R1'));\n      localStorage.setItem('gameProgress', 'R1');\n      goNext('game');\n      console.log('start game');\n      }, 3000);\n  }\n\n  /*useEffect(() => {\n    if (nameInput.current)\n  }, [form.name]);*/\n\n  useEffect(() => {\n    console.log(localStorage)\n  }, [localStorage.userName]);\n\n  useEffect(() => {\n    localStorage.setItem('userName', userName);\n  }, [userName]);\n\n  useEffect(() => {\n    localStorage.setItem('userNick', userNick);\n  }, [userNick]);\n\n  return (\n    <main className=\"newGameScreen__content\">\n      <div className=\"newGameScreen__textblock-content\">\n        { (!button3 && !button4) ? <>\n        <h2 className=\"newGameScreen__title\">Ну здравствуй, друг.</h2>\n        <p className=\"newGameScreen__text\">Давай знакомиться. Как твое имя?</p>\n        <form \n          onSubmit={handleUser}\n          className=\"newGameScreen__form\">\n          <input\n            placeholder=\"Меня зовут...\"\n            autoComplete=\"off\" \n            value={form.name} \n            name=\"name\" \n            onChange={onChange}\n            required\n            minLength={2}\n            maxLength={14}\n            className=\"newGameScreen__input\"\n            ref={nameInput}>\n          </input>\n          <button \n            type=\"button\" \n            onClick={handleClick} \n            className=\"newGameScreen__button\"\n            ref={nameButton}>\n            Так ты обо мне слышал?\n          </button>\n        {(form.name !== '' && button1) ? <>\n        <p className=\"newGameScreen__text\">Что-то припоминаю...</p>\n        <p className=\"newGameScreen__text\">Но как тебя называют в Пустошах?</p>\n        <select id=\"select\" className=\"newGameScreen__input\" ref={nickList} onChange={onChangeNick}>\n          <option selected value=\"Бродяга\">Бродяга</option>\n      \t  <option value=\"Задира\">Задира</option>\n  \t    \t<option value=\"Заноза\">Заноза</option>\n\t      \t<option value=\"Зараза\">Зараза</option>\n       \t  <option value=\"Горчица\">Горчица</option>\n\t    \t  <option value=\"Гангрена\">Гангрена</option>\n       \t  <option value=\"Пуля\">Пуля</option>\n\t      \t<option value=\"Могила\">Могила</option>\n        </select>\n        <p className=\"newGameScreen__small-text\">Не каждый может выбрать себе кличку. Выбирай мудро!</p>\n        <button type=\"submit\" className=\"newGameScreen__button \">\n          Нужные люди меня знают\n        </button>\n        </> : <></>\n        }\n        {button2 ? \n        <>\n          <p className=\"newGameScreen__text\">Ты хорошо понимаешь, куда попал?</p>\n          <div className=\"newGameScreen__button-block\">\n            <button \n              className=\"newGameScreen__small-button\"\n              onClick={onStartClick}>\n                Я знаю эти края лучше тебя, старик!</button>\n            <button \n              className=\"newGameScreen__small-button\"\n              onClick={onPrologueClick}>\n                Расскажи - давно <br/>у вас не был\n              </button>\n          </div>\n        </>\n        : <></>}\n        </form>\n      </> : <>\n        {button3 ? \n        <p className=\"newGameScreen__last-text\">Тогда удачи тебе, {userNick}!</p>\n        : <></>}\n        {button4 ? \n        <p className=\"newGameScreen__last-text\">Ну, слушай внимательно, {userNick}...</p>\n        : <></>}\n        </>}\n      </div>\n      <img className=\"newGameScreen__pic\" src={plakat}/>\n    </main>\n  );\n}  \n\nexport default NewGameScreen;\n","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\components\\Prologue\\Prologue.tsx",["257","258","259"],[],"import React, { FC, useEffect, useState } from \"react\";\r\nimport fone from '../../images/fone.jpg';\r\nimport prologue1 from '../../images/prologue1.jpg';\r\nimport skip from '../../images/skip-white.png';\r\nimport './Prologue.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { prologue } from '../../utils/constants';\r\n\r\ntype TPrologueProps = {\r\n  goNext: any;\r\n  screen: string;\r\n}\r\n\r\nconst Prologue: FC<TPrologueProps> = ({ goNext, screen }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [count, setCount] = useState(0);\r\n  const [turn, setTurn] = useState(0);\r\n  const [cadr, setCadr] = useState({pic: prologue1, text: 'Говорят, Предки жили лучше нас. В их домах всегда было тепло и сухо - и никаких крыс...'});\r\n  const [styles, setStyles] = useState(\"prologue__pic prologue__pic1\");\r\n\r\n  useEffect(() => {\r\n    setCount(prologue.length);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(turn);\r\n    console.log(count);\r\n  }, [count, turn]);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      if (turn < count) {\r\n        setCadr(prologue[turn]);\r\n        setTurn(turn + 1);\r\n        setStyles(getImgEffect());\r\n      };\r\n      if (turn === count) {\r\n        clearInterval(timer);\r\n      };\r\n    }, 6000);\r\n    return () => clearInterval(timer);\r\n  }, [count, turn]);\r\n\r\n  function skip1() {\r\n    if (turn < count) {\r\n      setTurn(turn + 1);\r\n      setCadr(prologue[turn]);\r\n    }\r\n    else {goNext('main')}\r\n  }\r\n\r\n  function getImgEffect() {\r\n    let res = Math.floor(Math.random() * (4 - 1) + 1);\r\n    if (res ===  1) return \"prologue__pic prologue__pic1\";\r\n    if (res === 2) return 'prologue__pic prologue__pic2'; \r\n    if (res === 3) return 'prologue__pic prologue__pic3' \r\n    return 'prologue__pic prologue__pic4'\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <main className=\"prologue__content\">\r\n        <img src={fone} alt=\"Серый фон\" className=\"prologue__fone\"/>\r\n        <img \r\n          src={cadr.pic} \r\n          alt=\"Пейзажи постапокалиптического города\" \r\n          className={styles}/>\r\n        <p className=\"prologue__text\">\r\n          {cadr.text}\r\n        </p>\r\n        <img src={skip} onClick={skip1} className=\"prologue__skip\"/>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Prologue;\r\n","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\components\\GameScreen\\GameScreen.tsx",["260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277"],[],"import React, { FC, useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport fone from '../../images/fone.jpg';\nimport pub from '../../images/pub1.png';\nimport skip from '../../images/skip.png';\nimport skip2 from '../../images/skip-white.png';\n//import { module1 } from '../../utils/constants';\nimport figure1 from '../../images/figure1.png';\nimport figure2 from '../../images/figure2.png';\nimport figure3 from '../../images/figure3.png';\nimport figure6 from '../../images/figure6.png';\nimport figure5 from '../../images/figure5.png';\nimport bandits from '../../images/bandits.png';\nimport albert from '../../images/albert.png';\nimport { TScreen } from '../../utils/types';\nimport './GameScreen.css';\nimport { setUserName, setUserNick, setProgress, setTemporaryProgress, clearUser } from '../../services/actions/user';\n\ntype TGameProps = {\n  goNext: any;\n  screen: string;\n}\n\nconst GameScreen: FC<TGameProps> = ({ goNext, screen }) => {\n\n  //const {screen, setScreen, musicOn, setMusicOn} = props;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { userName, userNick, gameProgress } = useSelector((state: any) => state.userReducer);\n  const [count, setCount] = useState(0);\n  const [part, setPart] = useState('Пролог. Часть 1');\n  const [currentChoise, setCurrentChoise] = useState('');\n  const [choise, setChoise] = useState('R1');\n  const [cadr, setCadr] = useState<TScreen>({\n    turn: 0,\n    pic: pub, \n    text1: 'Голова у меня гудит. Вчерашняя пьянка была что надо - жаль, я не слишком хорошо ее помню. Кстати, сейчас полдень или?..', \n    screenType: 'simple',\n    figure: null,\n  });\n\n  const module1:Array<TScreen> = [\n    {\n      turn: 1,\n      pic: pub, \n      text1: 'Голова у меня гудит. Вчерашняя пьянка была что надо - жаль, я не слишком хорошо ее помню. Кстати, сейчас полдень или?..',\n      screenType: 'simple',\n      figure: null,\n    },\n    {\n      turn: 2,\n      pic: pub, \n      text1: 'Помню мало, хоть убейте. Я в Андерстаде - это дыра на востоке Территорий по пути к Магистрали. Хотелось скрасить вечер, чтоб его...',\n      screenType: 'simple',\n      figure: null,\n    },\n    {\n      turn: 3,\n      pic: pub, \n      text1: 'По крайней мере, пушки при мне. Насчет бумажника сомневаюсь, но вначале надо что-нибудь выпить.',\n      screenType: 'simple',\n      figure: null,\n    },\n    {\n      turn: 4,\n      pic: pub,  \n      text1: 'Тут же наливают постояльцам хотя бы воду, правда?..',\n      screenType: 'simple',\n      figure: null,\n    },\n    {\n      turn: 5,\n      pic: pub,  \n      text1: `- Эй, это ведь ты ${localStorage.getItem('userNick')}?`,\n      text2: 'Боже, кому я нужен?..',\n      screenType: 'simple',\n      figure: null,\n    },\n    {\n      turn: 6,\n      pic: pub,  \n      text1: `- Это вас берут проводником, если хотят пройти Костяной перевал без жертв?..`,\n      screenType: 'choise',\n      button1: {\n        text: '- А какой у вас груз? Это недешево.',\n        mark: 1\n      },\n      button2: {\n        text: '- Я уже не работаю в тех краях.',\n        mark: 2\n      },\n      button3: {\n        text: 'Сделать сложное лицо',\n        mark: 3\n      },\n      figure: {\n        url: figure1,\n        position: 'game__figure2'\n      }\n    },\n    {\n      turn: 7,\n      pic: pub,  \n      text1: `- Ты ${localStorage.getItem('userNick')}, который возит в Согнберг выпивку под носом у Стражей?`,\n      screenType: 'choise',\n      button1: {\n        text: '- И не только выпивку. И вот кстати...',\n        mark: 1\n      },\n      button2: {\n        text: `- Нет, это был другой ${localStorage.getItem('userNick')}.`,\n        mark: 2\n      },\n      button3: {\n        text: 'Покоситься в сторону выпивки',\n        mark: 3\n      },\n      figure: {\n        url: figure2,\n        position: 'game__figure'\n      }\n    },\n    {\n      turn: 8,\n      pic: pub,  \n      text1: `Вот что значит популярность.`,\n      text2: `Хоть кто-нибудь здесь принесет мне выпить?..`,\n      screenType: 'simple',\n      figure: null\n    },\n    {\n      turn: 9,\n      pic: pub,  \n      text1: `- Это ведь к вам обращаются, если нужно вывезти человека из Новой Алои?..`,\n      screenType: 'choise',\n      button1: {\n        text: '- О таком не говорят с незнакомцами. Но мы можем познакомиться.',\n        mark: 1\n      },\n      button2: {\n        text: `- Вы ничего не докажете.`,\n        mark: 2\n      },\n      button3: {\n        text: 'Движением брови дать понять, что не намерен отвечать на сухое горло.',\n        mark: 3\n      },\n      figure: {\n        url: figure5,\n        position: 'game__figure2'\n      }\n    },\n    {\n      turn: 10,\n      pic: pub,  \n      text1: `- А это за твою голову концерн Солано обещает 500 крон и личную благодарность их капо?`,\n      screenType: 'choise',\n      button1: {\n        text: '- 500 крон? Покажите мне идиота, который согласится.',\n        mark: 1\n      },\n      button2: {\n        text: `- Им нужен какой-то другой ${localStorage.getItem('userNick')}. Удачи ему.`,\n        mark: 2\n      },\n      button3: {\n        text: 'Многозначительно промолчать',\n        mark: 3\n      },\n      figure: {\n        url: figure6,\n        position: 'game__figure'\n      }\n    },\n    {\n      turn: 11,\n      pic: pub,  \n      text1: `Ну да, я ${localStorage.getItem('userName')} ${localStorage.getItem('userNick')}. Я решаю проблемы.`,\n      text2: 'Если вы обо мне не слышали, значит, у вас еще не было проблем.',\n      screenType: 'simple',\n      figure: null,\n    },\n    {\n      turn: 12,\n      pic: pub,  \n      text1: `Что-то с тихим стеклянным стуком опускается на мой столик. Неужели это?..`,\n      screenType: 'simple',\n      figure: null\n    },\n    {\n      turn: 13,\n      pic: pub,\n      text1: `Боже, наконец-то. Не местный эль, но какое-то чуть теплое травяное пойло. Отлично утоляет жажду.`,\n      text2: `Нет, мне хватило выдержки сначала принюхаться, а только потом выхлебать половину. За кого вы меня принимаете?..`,\n      screenType: 'simple',\n      figure: null,\n    },\n    {\n      turn: 14,\n      pic: pub,\n      text1: `...Итак, у кого в этой дыре еще осталось сердце?..`,\n      text2: `Если это было начало переговоров, сделаю ему скидку.`,\n      screenType: 'simple',\n      figure: null,\n    },\n    {\n      turn: 15,\n      pic: pub,\n      text1: `Оторвавшись от кружки, я вижу только спину с ремнями кобуры - он уходит за свой дальний столик.`,\n      text2: `Похоже, это был акт чистого великодушия.`,\n      screenType: 'simple',\n      figure: {\n        url: albert,\n        position: 'game__figure4'\n      },\n    },\n    {\n      turn: 16,\n      pic: pub,  \n      text1: `Этот парень был здесь вчера.`,\n      text2: `Выглядит как местный шериф или маршал - или тот, кто прикончил местного маршала.`,\n      screenType: 'simple',\n      figure: {\n        url: albert,\n        position: 'game__figure4'\n      },\n      button1: {\n        text: '- Спасибо, друг.',\n      },\n    },\n    {\n      turn: 17,\n      pic: pub,  \n      text1: `- Будь здоров, ${localStorage.getItem('userNick')}.`,\n      text2: `Хм, так мы уже знакомы.`,\n      screenType: 'simple',\n      figure: {\n        url: albert,\n        position: 'game__figure4'\n      },\n      button1: {\n        text: 'Салютую ему полупустой кружкой.',\n      },\n    },\n    {\n      turn: 18,\n      pic: pub,  \n      text1: `...Знаете, иногда даже дверь хлопает так, что делается ясно: будет заварушка.`,\n      text2: `Бывает такая ритмика походки. В Пустошах привыкаешь слышать такие вещи.`,\n      screenType: 'simple',\n      figure: null,\n    },\n    {\n      turn: 19,\n      pic: pub,  \n      text1: `Особенно когда заходят сразу трое - вот такие.`,\n      text2: `В воздухе запахло проблемами , пылью и конским потом.`,\n      screenType: 'simple',\n      figure: {\n        url: bandits,\n        position: 'game__figure3'\n      }\n    },\n    {\n      turn: 20,\n      pic: pub,  \n      text1: `Здесь игра пока заканчивается.`,\n      text2: `Но скоро история двинется дальше!`,\n      screenType: 'endpoint',\n      next: 'Prologue. Part 2',\n      figure: null,\n      button1: {\n        text: 'На главную',\n      },\n    },\n  ];\n\n  const module2:Array<TScreen> = [\n    {\n      turn: 1,\n      pic: pub, \n      text1: 'Голова у меня гудит. Вчерашняя пьянка была что надо - жаль, я не слишком хорошо ее помню. Кстати, сейчас полдень или?..',\n      screenType: 'simple',\n      figure: null,\n    },\n  ]\n\n  function skip1() {\n    setCount(count + 1);\n  }\n\n  function handleChoise(item: string | number | undefined) {\n    console.log('выбор');\n    console.log(currentChoise);\n    if (cadr.screenType === 'choise') {\n      setCurrentChoise(currentChoise + item);\n    }\n    skip1()\n  }\n\n  function sumChoises() {\n    if (part === 'Пролог. Часть 1' && currentChoise.length === 4) {\n      let brave = 0;\n      let clever = 0;\n      let quite = 0;\n      let arr = currentChoise\n      .split('')\n      .forEach(item => {\n        if (item === '1') {\n          brave = brave + 1\n        }\n        if (item === '2') {\n          clever = clever + 1\n        }\n        if (item === '3') {\n          quite = quite + 1\n        }\n      });\n      setCurrentChoise('');\n      /*console.log('brave' + brave);\n      console.log('quite' + quite);\n      console.log('clever' + clever);*/\n      if (brave > clever && brave > quite) return 'A';\n      if (clever > brave && clever > quite) return 'B';\n      if (quite > brave && quite > clever) return 'C';\n      if (brave === clever) return 'D';\n      if (brave === quite) return 'E';\n      if (quite === clever) return 'F';\n    }\n  }\n\n  useEffect(() => {\n    if (gameProgress !== 'R1') {\n      console.log(gameProgress);\n      setChoise(gameProgress);\n      setCount(10);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (currentChoise.length >= 4) {\n      setChoise(choise + sumChoises());\n      localStorage.setItem('gameProgress', choise + sumChoises());\n      console.log('save R1+');\n      console.log(localStorage);\n      dispatch(setProgress(choise))\n    }\n  }, [currentChoise]);\n\n  useEffect(() => {\n    if (count !== 0) {\n      setCadr(module1[count]);\n    }\n  }, [count]);\n\n  useEffect(() => {\n    if (count !== 0) {\n      setCadr(module1[count]);\n    }\n  }, [count]);\n\n  return (\n    <>\n      <main className=\"game__content\">\n        <img src={fone} alt=\"Серый фон\" className=\"game__fone\"/>\n        <img \n          src={cadr.pic} \n          alt=\"Пейзажи постапокалиптического города\" \n          className=\"game__pic\"\n        />\n        {cadr.figure &&\n          <img \n            src={cadr.figure.url} \n            className={cadr.figure.position}/> \n        }\n        <div className=\"game__textBlock\">\n          <div className=\"game__infoBlock\">\n            <h2 className=\"game__stageText\">\n              {part}\n            </h2>\n            <p className=\"game__name\">\n              {localStorage.getItem('userName')} {localStorage.getItem('userNick')}\n            </p>\n            <div className=\"game__save\">\n              <p className=\"game__saveText\">\n                {choise}\n              </p>\n            </div>\n            <p className=\"game__smallText \">\n              текущий прогресс\n            </p>\n          </div>\n          <div className=\"game__dialogBlock\">\n            <p className=\"game__text2\">\n              {cadr.text1}\n            </p>\n            {cadr.text2 &&\n              <p className=\"game__text2\">\n                {cadr.text2}\n              </p>\n            }\n            {cadr.screenType === 'simple' && cadr.button1 && cadr.button1 !== undefined &&\n              <p \n                className=\"game__choise\"\n                onClick={e => {handleChoise(cadr?.button1?.mark)}}>\n                {cadr.button1.text}\n              </p> \n            }\n            {cadr.screenType === 'endpoint' && cadr.button1 && cadr.button1 !== undefined &&\n              <p \n                className=\"game__choise\"\n                onClick={e => {goNext('main')}}>\n                {cadr.button1.text}\n              </p> \n            }\n            {cadr.screenType === 'choise' && \n            <>\n              {cadr.button1 && cadr.button1 !== undefined &&\n              <p \n                className=\"game__choise\"\n                onClick={e => {handleChoise(cadr?.button1?.mark)}}>\n                {cadr.button1.text}\n              </p> \n              }\n              {cadr.button2 && cadr.button2 !== undefined &&\n              <p \n                className=\"game__choise\"\n                onClick={e => {handleChoise(cadr?.button2?.mark)}}>\n                {cadr.button2.text}\n              </p> \n              }\n              {cadr.button3 && cadr.button3 !== undefined &&\n              <p \n                className=\"game__choise\"\n                onClick={e => {handleChoise(cadr?.button3?.mark)}}>\n                {cadr.button3.text}\n              </p>\n              }\n            </>}\n            {cadr.screenType !== 'choise' && cadr.screenType !== 'endpoint' && !cadr.button1 &&\n              <img src={skip2} onClick={skip1} className=\"game__skip\"/> \n            }\n          </div>\n\n        </div>\n\n      </main>\n    </>\n  );\n}  \n\nexport default GameScreen; \n","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\components\\Header\\Header.tsx",["278","279","280","281"],[],"import React, { FC, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport logo from '../../images/logo1.png';\r\nimport './Header.css';\r\n\r\ntype THeaderProps = {\r\n  goNext: (arg0: string) => void;\r\n}\r\n\r\nconst Header: FC<THeaderProps> = ({ goNext }) => {\r\n\r\n  function handleClick() {\r\n    goNext('main')\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <header className=\"header\">\r\n      <img \r\n        src={logo} \r\n        alt=\"Странный логотип игры\" \r\n        className=\"header__logo\"\r\n        onClick={handleClick}\r\n        />\r\n      \r\n      <h1 className=\"header__title\">Андерстад. Новый фронтир</h1>\r\n      <h2 className=\"header__subtitle\">Отличная игра из романтики, приключений и текста</h2>\r\n    </header>\r\n    </>\r\n  );\r\n}  \r\n\r\nexport default Header;\r\n","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\components\\Footer\\Footer.tsx",["282","283","284","285","286","287","288","289"],[],"import React, { FC, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './Footer.css';\r\nimport useSound from 'use-sound';\r\nimport play from '../../images/play.png';\r\nimport stop1 from '../../images/stop.png';\r\nimport github from '../../images/git.png';\r\n\r\ntype TFooterProps = {\r\n  musicOn: any;\r\n  soundOn: any;\r\n  soundOff: any;\r\n}\r\n\r\nconst Footer: FC<TFooterProps> = ({ musicOn, soundOn, soundOff }) => {\r\n\r\n  //const {musicOn, soundOn, soundOff} = props;\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"footer__content\">\r\n        <button \r\n          onClick={() => {musicOn ? soundOff() : soundOn()}}\r\n          className=\"footer__sound-button\">\r\n          <img \r\n            src={musicOn ? stop1 : play}\r\n            className=\"footer__sound-button1\"/>\r\n        </button>\r\n        <div className=\"footer__text-block\">\r\n          <a href='https://github.com/krokodila888' className=\"footer__link-text\" target=\"_blank\">\r\n            <img className=\"footer__social-icon\" src={github}/>  Github/contacts\r\n          </a>   \r\n          <p className=\"footer__text\">\r\n            © 2024\r\n          </p>   \r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}  \r\n\r\nexport default Footer;\r\n","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\components\\ResumeGameScreen\\ResumeGameScreen.tsx",["290","291","292","293","294","295","296","297","298"],[],"import React, { FC, useEffect, useState, ChangeEvent } from \"react\";\r\nimport fone from '../../images/fone.jpg';\r\nimport plakat from '../../images/plakat1.png';\r\nimport './ResumeGameScreen.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setUserName, setUserNick, setProgress, setTemporaryProgress, clearUser } from '../../services/actions/user';\r\nimport { TNickList } from '../../utils/types';\r\n\r\ntype TResumeGameScreenProps = {\r\n  goNext: any;\r\n  screen: string;\r\n}\r\n\r\nconst ResumeGameScreen: FC<TResumeGameScreenProps> = ({ goNext, screen }) => {\r\n\r\n  const [form, setValue] = useState({ userName: '', nick: 'Бродяга' });\r\n  const [nameSaving, setNameSaving] = useState(false);\r\n  const [gameSaving, setGameSaving] = useState(false);\r\n  const [combination, setCombination] = useState({userCombination: ''});\r\n  const [button1, setButton1] = useState(false);\r\n  const [button2, setButton2] = useState(false);\r\n  const [button3, setButton3] = useState(false);\r\n  const [button4, setButton4] = useState(false);\r\n  const [button5, setButton5] = useState(false);\r\n  const { userName, userNick, gameProgress } = useSelector((state: any) => state.userReducer);\r\n  const dispatch = useDispatch();\r\n  const nickList = React.useRef<any>();\r\n\r\n  function handleUser(evt: any) {\r\n    evt.preventDefault();\r\n    //console.log('button1' + button1);\r\n    //console.log('gamesaving' + gameSaving);\r\n    dispatch(setUserName(form.userName));\r\n    dispatch(setUserNick(form.nick));\r\n    //console.log(form);\r\n    setButton1(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if ((userName !== null) && (userName !== localStorage.getItem('userName')))\r\n    localStorage.setItem('userName', userName);\r\n  }, [userName]);\r\n\r\n  useEffect(() => {\r\n    if (userNick !== null && userNick !== localStorage.getItem('userNick'))\r\n    localStorage.setItem('userNick', userNick);\r\n  }, [userNick]);\r\n\r\n  /*useEffect(() => {\r\n    localStorage.setItem('gameProgress', gameProgress);\r\n  }, [gameProgress]);*/\r\n\r\n  //при уходе со страницы обнуляем форму\r\n  useEffect(() => {\r\n    if (screen !== 'resume')\r\n    {setValue({ userName: '', nick: '' });\r\n    setButton1(false);\r\n    setButton2(false);\r\n    setButton3(false);\r\n    setButton4(false);\r\n    setButton5(false);\r\n    setNameSaving(false);\r\n    setGameSaving(false);\r\n  }\r\n  }, []);\r\n\r\n  //восстановление прошлой игры - данные игрока\r\n  useEffect(() => {\r\n    if (\r\n      (localStorage.getItem('userName') !== null || undefined) && (localStorage.getItem('userNick') !== null || undefined)\r\n    ) {\r\n      setValue({userName: `${localStorage.getItem('userName')}`, nick: `${localStorage.getItem('userNick')}`});\r\n      nickList.current.value = localStorage.getItem('userNick');\r\n      setNameSaving(true);\r\n    }\r\n    else {\r\n      setNameSaving(false);\r\n    }\r\n  }, []);\r\n\r\n  function checkExpression(x: string | null | undefined) {\r\n    console.log('saving:' + x);\r\n    let regexp = /^R\\d[A-F]?/;\r\n    if (x !== undefined && x !== null)\r\n      {console.log(regexp.test(x))\r\n      }\r\n    if (x !== undefined && x?.length !== undefined && x?.length >= 2) \r\n    return (regexp.test(x));\r\n  }\r\n\r\n  //восстановление прошлой игры - данные игры\r\n  useEffect(() => {\r\n    //если в хранилище что-то лежит и оно валидно...\r\n    if (\r\n      (localStorage.getItem('gameProgress') !== null || undefined) && checkExpression(localStorage.getItem('gameProgress'))\r\n    ) {\r\n      //пишем в консоль, меняем переменную, кладем в стор\r\n      console.log('valid saving!!')\r\n      console.log('gameProgress LS' + localStorage.getItem('gameProgress'))\r\n      setGameSaving(true);\r\n      dispatch(setProgress(localStorage.getItem('gameProgress')));\r\n      console.log('gameProgress' + gameProgress)\r\n    }\r\n    else {\r\n      console.log('no saving');\r\n      setGameSaving(false);\r\n    }\r\n  }, []);\r\n\r\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setValue({ ...form, [e.target.name]: e.target.value });\r\n    console.log(form);\r\n    /*dispatch(setUserName(form.name));\r\n    dispatch(setUserNick(form.nick));*/\r\n  };\r\n\r\n  const onChangeCombination = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setCombination({ ...combination, [e.target.name]: e.target.value });\r\n    console.log(combination);\r\n    /*dispatch(setUserName(form.name));\r\n    dispatch(setUserNick(form.nick));*/\r\n  };\r\n\r\n  const onChangeNick = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    if (nickList.current) {\r\n      setValue({ ...form, nick: nickList.current.value });\r\n      console.log(form);\r\n    }\r\n  };\r\n\r\n  function onAnotherClick() {\r\n    setButton2(true);\r\n  }\r\n\r\n  function onForgetClick() {\r\n    //setButton4(true);\r\n\r\n  }\r\n\r\n  function onStartClick() {\r\n    setButton3(true);\r\n    setTimeout(() => {\r\n      goNext('game');\r\n      console.log('start game');\r\n      }, 3000);\r\n  }\r\n\r\n  function onCheckClick() {\r\n    if (checkExpression(combination.userCombination)) {\r\n      dispatch(setProgress(combination.userCombination));\r\n      localStorage.setItem('gameProgress', combination.userCombination);\r\n      console.log('userName' + userName + userNick)\r\n      console.log('gameProgress' + gameProgress);\r\n      console.log(localStorage);\r\n      onStartClick()\r\n    }\r\n    else setButton5(true);\r\n  }\r\n\r\n\r\n  function onNewGameClick() {\r\n    goNext('newGame');\r\n  }\r\n\r\n  return (\r\n    <main className=\"resumeGameScreen__content\">\r\n      <div className=\"resumeGameScreen__textblock-content\">\r\n        { (!button3 && !button4) && <>\r\n        <h2 className=\"resumeGameScreen__title\">Ну здравствуй, друг.</h2>\r\n        <p className=\"resumeGameScreen__text\">Давно тебя не было. Но я помню, ты...</p>\r\n        <form \r\n          onSubmit={handleUser}\r\n          className=\"resumeGameScreen__form\">\r\n          <input\r\n            placeholder=\"Меня зовут...\"\r\n            autoComplete=\"off\" \r\n            value={form.userName} \r\n            name=\"userName\" \r\n            onChange={onChange}\r\n            required\r\n            minLength={2}\r\n            maxLength={14}\r\n            className=\"resumeGameScreen__input\">\r\n          </input>\r\n          <select id=\"nickList\" className=\"resumeGameScreen__input\" ref={nickList} onChange={onChangeNick}>\r\n            <option selected defaultValue=\"Бродяга\">Бродяга</option>\r\n          \t<option value=\"Задира\">Задира</option>\r\n  \t        <option value=\"Заноза\">Заноза</option>\r\n\t          <option value=\"Зараза\">Зараза</option>\r\n       \t    <option value=\"Горчица\">Горчица</option>\r\n\t          <option value=\"Гангрена\">Гангрена</option>\r\n       \t    <option value=\"Пуля\">Пуля</option>\r\n\t          <option value=\"Могила\">Могила</option>\r\n          </select>\r\n          <button \r\n            type=\"button\" \r\n            onClick={handleUser} \r\n            className=\"resumeGameScreen__button \">\r\n            Все верно\r\n          </button>\r\n          <p className=\"resumeGameScreen__small-text\">Если возьмешь другое имя - прежнее все забудут!</p>\r\n        </form>\r\n\r\n        {button1 && gameSaving && \r\n        <>\r\n          <p className=\"resumeGameScreen__text\">\r\n            Я помню, на чем ты остановился. Хочешь продолжить?\r\n          </p>\r\n          <div className=\"resumeGameScreen__button-block\">\r\n            <button \r\n              className=\"resumeGameScreen__small-button\"\r\n              onClick={onStartClick}>\r\n                Да, погнали\r\n            </button>\r\n            <button \r\n              className=\"resumeGameScreen__small-button\"\r\n              onClick={onAnotherClick}>\r\n                Нет, хочу начать<br/>в другом месте\r\n            </button>\r\n          </div>\r\n        </>\r\n        }\r\n        {((button1 && !gameSaving) || (button1 && button2)) && \r\n        <>\r\n          <p className=\"resumeGameScreen__text\">\r\n            Не напомнишь, где ты остановился?\r\n          </p>\r\n          <input\r\n            placeholder=\"Место для комбинации\"\r\n            autoComplete=\"off\" \r\n            value={combination.userCombination} \r\n            name=\"userCombination\" \r\n            onChange={onChangeCombination}\r\n            minLength={2}\r\n            maxLength={3}\r\n            className=\"resumeGameScreen__input\">\r\n          </input>\r\n          {button5 && \r\n            <p className=\"resumeGameScreen__small-text\">\r\n              Тут какая-то ошибка, уж прости\r\n            </p>\r\n          }\r\n          <div className=\"resumeGameScreen__button-block\">\r\n            <button \r\n              className=\"resumeGameScreen__small-button\"\r\n              onClick={onCheckClick}>\r\n                Вот здесь\r\n            </button>\r\n            <button \r\n              className=\"resumeGameScreen__small-button\"\r\n              onClick={onNewGameClick}>\r\n                Не помню, давай <br/>сначала\r\n              </button>\r\n          </div>\r\n        </>\r\n        }\r\n        { button4 && \r\n        <>\r\n          <p className=\"resumeGameScreen__text\">\r\n            Тогда давай вспомним.\r\n          </p>\r\n          <div className=\"resumeGameScreen__button-block\">\r\n            <button \r\n              className=\"resumeGameScreen__small-button\"\r\n              onClick={onStartClick}>\r\n                Вот здесь\r\n            </button>\r\n            <button \r\n              className=\"resumeGameScreen__small-button\"\r\n              onClick={onNewGameClick}>\r\n                Давай лучше <br/>сначала\r\n              </button>\r\n          </div>\r\n        </>\r\n        }\r\n      </>  \r\n      }\r\n\r\n      {button3 && \r\n      <p className=\"resumeGameScreen__last-text\">\r\n        Удачи тебе, {userNick}!\r\n      </p>\r\n      }\r\n      </div>\r\n      <img className=\"resumeGameScreen__pic\" src={plakat}/>\r\n    </main>\r\n  );\r\n}  \r\n\r\nexport default ResumeGameScreen;\r\n","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\utils\\constants.ts",["299","300","301","302","303"],[],"import prologue1 from '../images/prologue1.jpg';\nimport prologue2 from '../images/main2.jpg';\nimport prologue3 from '../images/prologue3.jpeg';\nimport prologue5 from '../images/prologue5.jpg';\nimport prologue4 from '../images/prologue-new.jpg';\nimport prologue6 from '../images/prologue-33.jpg';\nimport prologue7 from '../images/prologue4.jpg';\nimport prologue8 from '../images/prologue-horse.jpg';\nimport prologue9 from '../images/prologue-new1.jpg';\nimport prologue10 from '../images/lands1.jpg';\nimport prologue11 from '../images/lands2.jpg';\nimport figure1 from '../images/figure1.png';\nimport figure2 from '../images/figure2.png';\nimport figure3 from '../images/figure3.png';\nimport figure6 from '../images/figure6.png';\nimport figure5 from '../images/figure5.png';\nimport bandits from '../images/bandits.png';\nimport albert from '../images/albert.png';\nimport pub from '../images/pub1.png';\nimport { TPrologueScreenType } from './types';\nimport { TScreen } from './types';\n\nexport const SET_USERNAME: 'SET_USERNAME' = 'SET_USERNAME';\nexport const SET_USERNICK: 'SET_USERNICK' = 'SET_USERNICK';\nexport const CLEAR_USER: 'CLEAR_USER' = 'CLEAR_USER';\nexport const SET_PROGRESS: 'SET_PROGRESS' = 'SET_PROGRESS';\nexport const CLEAR_PROGRESS: 'CLEAR_PROGRESS' = 'CLEAR_PROGRESS';\nexport const SET_TEMPORARY_PROGRESS: 'SET_TEMPORARY_PROGRESS' = 'SET_TEMPORARY_PROGRESS';\nexport const CLEAR_TEMPORARY_PROGRESS: 'CLEAR_TEMPORARY_PROGRESS' = 'CLEAR_TEMPORARY_PROGRESS';\n\nexport const facts = [\n  'Пакет союзных договоров между Территориями и Эйсландом продляют раз в пять лет',\n  'Сложно поверить, но первая библиотека в Эрнстранде была открыта до возведения городских стен!',\n  'Знаете ли вы, что в Согнберге в ходу 14 видов смертной казни только за религиозные прступления?',\n  'Ввозная пошлина на алкогольную продукцию в Хуннланге берется товаром',\n  'Ввозная пошлина на алкогольную продукцию в Хуннланге берется товаром',\n  'На Рыбном рынке Эйсланда можно купить технику, оружие, одежду и редкие артефакты из мира Предков',\n];\n\nexport const prologue: Array<TPrologueScreenType> = [\n  {\n    pic: prologue2, \n    text: 'Они тратили столько электричества, сколько хочется. Строили высоченные дома, ели пищу с других континентов...'  \n  },\n  {\n    pic: prologue3, \n    text: 'Путешествовали без оружия, могли вылечить любую болезнь...'\n  },\n  {\n    pic: prologue9, \n    text: 'Кроме той, которая положила конец их миру.'\n  },\n  {\n    pic: prologue4, \n    text: 'С тех пор тут все здорово изменилось. Чертовски изменилось.'\n  },\n  {\n    pic: prologue8, \n    text: 'Предкам, наверное, не понравилось бы. Но мы не жалуемся'\n  },\n  {\n    pic: prologue10, \n    text: 'Нам есть чем заняться. Но мы не восстанавливаем их мир - мы строим свой'\n  },\n  /*{\n    pic: prologue6, \n    text: 'Нам есть чем заняться. Но мы не восстанавливаем их мир - мы строим свой'\n  },*/\n  {\n    pic: prologue5, \n    text: 'Хочешь узнать о нем больше?'\n  },\n\n];\n\nexport const module1:Array<TScreen> = [\n    {\n      turn: 1,\n      pic: pub, \n      text1: 'Голова у меня гудит. Вчерашняя пьянка была что надо - жаль, я не слишком хорошо ее помню. Кстати, сейчас полдень или?..',\n      screenType: 'simple',\n      figure: null,\n    },\n    {\n      turn: 2,\n      pic: pub, \n      text1: 'Помню мало, хоть убейте. Я в Андерстаде - это дыра на востоке Территорий по пути к Магистрали. Хотелось скрасить вечер, чтоб его...',\n      screenType: 'simple',\n      figure: null,\n    },\n    {\n      turn: 3,\n      pic: pub, \n      text1: 'По крайней мере, пушки при мне. Насчет бумажника сомневаюсь, но вначале надо что-нибудь выпить.',\n      screenType: 'simple',\n      figure: null,\n    },\n    {\n      turn: 4,\n      pic: pub,  \n      text1: 'Тут же наливают постояльцам хотя бы воду, правда?..',\n      screenType: 'simple',\n      figure: null,\n    },\n    {\n      turn: 5,\n      pic: pub,  \n      text1: `- Эй, это ведь ты ${localStorage.getItem('userNick')}?`,\n      text2: 'Боже, кому я нужен?..',\n      screenType: 'simple',\n      figure: null,\n    },\n    {\n      turn: 6,\n      pic: pub,  \n      text1: `- Это вас берут проводником, если хотят пройти Костяной перевал без жертв?..`,\n      screenType: 'choise',\n      button1: {\n        text: '- А какой у вас груз? Это недешево.',\n        mark: 1\n      },\n      button2: {\n        text: '- Я уже не работаю в тех краях.',\n        mark: 2\n      },\n      button3: {\n        text: 'Сделать сложное лицо',\n        mark: 3\n      },\n      figure: {\n        url: figure1,\n        position: 'game__figure2'\n      }\n    },\n    {\n      turn: 7,\n      pic: pub,  \n      text1: `- Ты ${localStorage.getItem('userNick')}, который возит в Согнберг выпивку под носом у Стражей?`,\n      screenType: 'choise',\n      button1: {\n        text: '- И не только выпивку. И вот кстати...',\n        mark: 1\n      },\n      button2: {\n        text: `- Нет, это был другой ${localStorage.getItem('userNick')}.`,\n        mark: 2\n      },\n      button3: {\n        text: 'Покоситься в сторону выпивки',\n        mark: 3\n      },\n      figure: {\n        url: figure2,\n        position: 'game__figure'\n      }\n    },\n    {\n      turn: 8,\n      pic: pub,  \n      text1: `Вот что значит популярность.`,\n      text2: `Хоть кто-нибудь здесь принесет мне выпить?..`,\n      screenType: 'simple',\n      figure: null\n    },\n    {\n      turn: 9,\n      pic: pub,  \n      text1: `- Это ведь к вам обращаются, если нужно вывезти человека из Новой Алои?..`,\n      screenType: 'choise',\n      button1: {\n        text: '- О таком не говорят с незнакомцами. Но мы можем познакомиться.',\n        mark: 1\n      },\n      button2: {\n        text: `- Вы ничего не докажете.`,\n        mark: 2\n      },\n      button3: {\n        text: 'Движением брови дать понять, что не намерен отвечать на сухое горло.',\n        mark: 3\n      },\n      figure: {\n        url: figure5,\n        position: 'game__figure2'\n      }\n    },\n    {\n      turn: 10,\n      pic: pub,  \n      text1: `- А это за твою голову концерн Солано обещает 500 крон и личную благодарность их капо?`,\n      screenType: 'choise',\n      button1: {\n        text: '- 500 крон? Покажите мне идиота, который согласится.',\n        mark: 1\n      },\n      button2: {\n        text: `- Им нужен какой-то другой ${localStorage.getItem('userNick')}. Удачи ему.`,\n        mark: 2\n      },\n      button3: {\n        text: 'Многозначительно промолчать',\n        mark: 3\n      },\n      figure: {\n        url: figure6,\n        position: 'game__figure'\n      }\n    },\n    {\n      turn: 11,\n      pic: pub,  \n      text1: `Ну да, я ${localStorage.getItem('userName')} ${localStorage.getItem('userNick')}. Я решаю проблемы.`,\n      text2: 'Если вы обо мне не слышали, значит, у вас еще не было проблем.',\n      screenType: 'simple',\n      figure: null,\n    },\n    {\n      turn: 12,\n      pic: pub,  \n      text1: `Что-то с тихим стеклянным стуком опускается на мой столик. Неужели это?..`,\n      screenType: 'simple',\n      figure: null\n    },\n    {\n      turn: 13,\n      pic: pub,\n      text1: `Боже, наконец-то. Не местный эль, но какое-то чуть теплое травяное пойло. Отлично утоляет жажду.`,\n      text2: `Нет, мне хватило выдержки сначала принюхаться, а только потом выхлебать половину. За кого вы меня принимаете?..`,\n      screenType: 'simple',\n      figure: null,\n    },\n    {\n      turn: 14,\n      pic: pub,\n      text1: `...Итак, у кого в этой дыре еще осталось сердце?..`,\n      text2: `Если это было начало переговоров, сделаю ему скидку.`,\n      screenType: 'simple',\n      figure: null,\n    },\n    {\n      turn: 15,\n      pic: pub,\n      text1: `Оторвавшись от кружки, я вижу только спину с ремнями кобуры - он уходит за свой дальний столик.`,\n      text2: `Похоже, это был акт чистого великодушия.`,\n      screenType: 'simple',\n      figure: {\n        url: albert,\n        position: 'game__figure4'\n      },\n    },\n    {\n      turn: 16,\n      pic: pub,  \n      text1: `Этот парень был здесь вчера.`,\n      text2: `Выглядит как местный шериф или маршал - или тот, кто прикончил местного маршала.`,\n      screenType: 'simple',\n      figure: {\n        url: albert,\n        position: 'game__figure4'\n      },\n      button1: {\n        text: '- Спасибо, друг.',\n      },\n    },\n    {\n      turn: 17,\n      pic: pub,  \n      text1: `- Будь здоров, ${localStorage.getItem('userNick')}.`,\n      text2: `Хм, так мы уже знакомы.`,\n      screenType: 'simple',\n      figure: {\n        url: albert,\n        position: 'game__figure4'\n      },\n      button1: {\n        text: 'Салютую ему полупустой кружкой.',\n      },\n    },\n    {\n      turn: 18,\n      pic: pub,  \n      text1: `...Знаете, иногда даже дверь хлопает так, что делается ясно: будет заварушка.`,\n      text2: `Бывает такая ритмика походки. В Пустошах привыкаешь слышать такие вещи.`,\n      screenType: 'simple',\n      figure: null,\n    },\n    {\n      turn: 19,\n      pic: pub,  \n      text1: `Особенно когда заходят сразу трое - вот такие.`,\n      text2: `В воздухе запахло проблемами , пылью и конским потом.`,\n      screenType: 'simple',\n      figure: {\n        url: bandits,\n        position: 'game__figure3'\n      }\n    },\n    {\n      turn: 20,\n      pic: pub,  \n      text1: `Здесь игра пока заканчивается.`,\n      text2: `Но скоро история двинется дальше!`,\n      screenType: 'endpoint',\n      next: 'Prologue. Part 2',\n      figure: null,\n      button1: {\n        text: 'На главную',\n      },\n    },\n  ];","C:\\Users\\kroko\\OneDrive\\Рабочий стол\\game\\src\\utils\\types.ts",[],[],{"ruleId":"304","severity":1,"message":"305","line":17,"column":53,"nodeType":"306","messageId":"307","endLine":17,"endColumn":55},{"ruleId":"304","severity":1,"message":"305","line":17,"column":100,"nodeType":"306","messageId":"307","endLine":17,"endColumn":102},{"ruleId":"308","severity":1,"message":"309","line":1,"column":28,"nodeType":"310","messageId":"311","endLine":1,"endColumn":36},{"ruleId":"308","severity":1,"message":"312","line":11,"column":10,"nodeType":"310","messageId":"311","endLine":11,"endColumn":20},{"ruleId":"308","severity":1,"message":"313","line":12,"column":10,"nodeType":"310","messageId":"311","endLine":12,"endColumn":27},{"ruleId":"314","severity":1,"message":"315","line":52,"column":6,"nodeType":"316","endLine":52,"endColumn":8,"suggestions":"317"},{"ruleId":"318","severity":1,"message":"319","line":29,"column":41,"nodeType":"320","messageId":"321","endLine":29,"endColumn":43},{"ruleId":"322","severity":1,"message":"323","line":11,"column":11,"nodeType":"324","messageId":"325","endLine":11,"endColumn":95,"fix":"326"},{"ruleId":"327","severity":1,"message":"328","line":12,"column":13,"nodeType":"324","endLine":12,"endColumn":64},{"ruleId":"322","severity":1,"message":"323","line":17,"column":11,"nodeType":"324","messageId":"325","endLine":17,"endColumn":90,"fix":"329"},{"ruleId":"327","severity":1,"message":"328","line":18,"column":13,"nodeType":"324","endLine":18,"endColumn":66},{"ruleId":"308","severity":1,"message":"330","line":1,"column":17,"nodeType":"310","messageId":"311","endLine":1,"endColumn":26},{"ruleId":"308","severity":1,"message":"309","line":1,"column":28,"nodeType":"310","messageId":"311","endLine":1,"endColumn":36},{"ruleId":"308","severity":1,"message":"331","line":6,"column":10,"nodeType":"310","messageId":"311","endLine":6,"endColumn":16},{"ruleId":"308","severity":1,"message":"332","line":13,"column":11,"nodeType":"310","messageId":"311","endLine":13,"endColumn":22},{"ruleId":"308","severity":1,"message":"333","line":6,"column":10,"nodeType":"310","messageId":"311","endLine":6,"endColumn":17},{"ruleId":"308","severity":1,"message":"334","line":3,"column":10,"nodeType":"310","messageId":"311","endLine":3,"endColumn":21},{"ruleId":"308","severity":1,"message":"335","line":11,"column":9,"nodeType":"310","messageId":"311","endLine":11,"endColumn":17},{"ruleId":"314","severity":1,"message":"336","line":46,"column":6,"nodeType":"316","endLine":46,"endColumn":21,"suggestions":"337"},{"ruleId":"314","severity":1,"message":"338","line":117,"column":6,"nodeType":"316","endLine":117,"endColumn":21,"suggestions":"339"},{"ruleId":"314","severity":1,"message":"340","line":96,"column":6,"nodeType":"316","endLine":96,"endColumn":8,"suggestions":"341"},{"ruleId":"314","severity":1,"message":"342","line":146,"column":6,"nodeType":"316","endLine":146,"endColumn":21,"suggestions":"343"},{"ruleId":"308","severity":1,"message":"330","line":1,"column":17,"nodeType":"310","messageId":"311","endLine":1,"endColumn":26},{"ruleId":"308","severity":1,"message":"344","line":7,"column":10,"nodeType":"310","messageId":"311","endLine":7,"endColumn":15},{"ruleId":"308","severity":1,"message":"345","line":16,"column":10,"nodeType":"310","messageId":"311","endLine":16,"endColumn":15},{"ruleId":"308","severity":1,"message":"346","line":16,"column":17,"nodeType":"310","messageId":"311","endLine":16,"endColumn":25},{"ruleId":"308","severity":1,"message":"347","line":17,"column":10,"nodeType":"310","messageId":"311","endLine":17,"endColumn":25},{"ruleId":"308","severity":1,"message":"348","line":17,"column":27,"nodeType":"310","messageId":"311","endLine":17,"endColumn":45},{"ruleId":"308","severity":1,"message":"349","line":18,"column":10,"nodeType":"310","messageId":"311","endLine":18,"endColumn":25},{"ruleId":"308","severity":1,"message":"350","line":19,"column":10,"nodeType":"310","messageId":"311","endLine":19,"endColumn":20},{"ruleId":"308","severity":1,"message":"351","line":19,"column":22,"nodeType":"310","messageId":"311","endLine":19,"endColumn":35},{"ruleId":"352","severity":1,"message":"353","line":36,"column":8,"nodeType":"310","messageId":"311","endLine":36,"endColumn":23},{"ruleId":"304","severity":1,"message":"305","line":48,"column":53,"nodeType":"306","messageId":"307","endLine":48,"endColumn":55},{"ruleId":"304","severity":1,"message":"305","line":48,"column":100,"nodeType":"306","messageId":"307","endLine":48,"endColumn":102},{"ruleId":"352","severity":1,"message":"309","line":1,"column":32,"nodeType":"310","messageId":"311","endLine":1,"endColumn":40},{"ruleId":"352","severity":1,"message":"354","line":8,"column":36,"nodeType":"310","messageId":"311","endLine":8,"endColumn":45},{"ruleId":"352","severity":1,"message":"355","line":15,"column":9,"nodeType":"310","messageId":"311","endLine":15,"endColumn":17},{"ruleId":"352","severity":1,"message":"356","line":16,"column":11,"nodeType":"310","messageId":"311","endLine":16,"endColumn":19},{"ruleId":"314","severity":1,"message":"357","line":20,"column":6,"nodeType":"316","endLine":20,"endColumn":29,"suggestions":"358"},{"ruleId":"314","severity":1,"message":"359","line":29,"column":6,"nodeType":"316","endLine":29,"endColumn":8,"suggestions":"360"},{"ruleId":"352","severity":1,"message":"330","line":1,"column":21,"nodeType":"310","messageId":"311","endLine":1,"endColumn":30},{"ruleId":"352","severity":1,"message":"309","line":1,"column":32,"nodeType":"310","messageId":"311","endLine":1,"endColumn":40},{"ruleId":"352","severity":1,"message":"361","line":19,"column":10,"nodeType":"310","messageId":"311","endLine":19,"endColumn":21},{"ruleId":"352","severity":1,"message":"362","line":19,"column":23,"nodeType":"310","messageId":"311","endLine":19,"endColumn":34},{"ruleId":"352","severity":1,"message":"363","line":19,"column":36,"nodeType":"310","messageId":"311","endLine":19,"endColumn":47},{"ruleId":"352","severity":1,"message":"364","line":19,"column":49,"nodeType":"310","messageId":"311","endLine":19,"endColumn":69},{"ruleId":"352","severity":1,"message":"365","line":27,"column":10,"nodeType":"310","messageId":"311","endLine":27,"endColumn":15},{"ruleId":"352","severity":1,"message":"366","line":27,"column":17,"nodeType":"310","messageId":"311","endLine":27,"endColumn":25},{"ruleId":"314","severity":1,"message":"367","line":73,"column":6,"nodeType":"316","endLine":73,"endColumn":14,"suggestions":"368"},{"ruleId":"352","severity":1,"message":"369","line":107,"column":12,"nodeType":"310","messageId":"311","endLine":107,"endColumn":21},{"ruleId":"352","severity":1,"message":"370","line":127,"column":12,"nodeType":"310","messageId":"311","endLine":127,"endColumn":17},{"ruleId":"327","severity":1,"message":"328","line":174,"column":11,"nodeType":"324","endLine":176,"endColumn":41},{"ruleId":"352","severity":1,"message":"371","line":2,"column":8,"nodeType":"310","messageId":"311","endLine":2,"endColumn":12},{"ruleId":"352","severity":1,"message":"354","line":6,"column":49,"nodeType":"310","messageId":"311","endLine":6,"endColumn":58},{"ruleId":"352","severity":1,"message":"372","line":7,"column":10,"nodeType":"310","messageId":"311","endLine":7,"endColumn":19},{"ruleId":"314","severity":1,"message":"373","line":46,"column":6,"nodeType":"316","endLine":46,"endColumn":8,"suggestions":"374"},{"ruleId":"314","severity":1,"message":"373","line":56,"column":6,"nodeType":"316","endLine":56,"endColumn":8,"suggestions":"375"},{"ruleId":"314","severity":1,"message":"376","line":114,"column":6,"nodeType":"316","endLine":114,"endColumn":29,"suggestions":"377"},{"ruleId":"327","severity":1,"message":"328","line":197,"column":7,"nodeType":"324","endLine":197,"endColumn":57},{"ruleId":"352","severity":1,"message":"334","line":6,"column":10,"nodeType":"310","messageId":"311","endLine":6,"endColumn":21},{"ruleId":"352","severity":1,"message":"335","line":16,"column":9,"nodeType":"310","messageId":"311","endLine":16,"endColumn":17},{"ruleId":"327","severity":1,"message":"328","line":73,"column":9,"nodeType":"324","endLine":73,"endColumn":69},{"ruleId":"352","severity":1,"message":"378","line":6,"column":8,"nodeType":"310","messageId":"311","endLine":6,"endColumn":12},{"ruleId":"352","severity":1,"message":"379","line":11,"column":8,"nodeType":"310","messageId":"311","endLine":11,"endColumn":15},{"ruleId":"352","severity":1,"message":"361","line":18,"column":10,"nodeType":"310","messageId":"311","endLine":18,"endColumn":21},{"ruleId":"352","severity":1,"message":"362","line":18,"column":23,"nodeType":"310","messageId":"311","endLine":18,"endColumn":34},{"ruleId":"352","severity":1,"message":"364","line":18,"column":49,"nodeType":"310","messageId":"311","endLine":18,"endColumn":69},{"ruleId":"352","severity":1,"message":"354","line":18,"column":71,"nodeType":"310","messageId":"311","endLine":18,"endColumn":80},{"ruleId":"352","severity":1,"message":"355","line":29,"column":9,"nodeType":"310","messageId":"311","endLine":29,"endColumn":17},{"ruleId":"352","severity":1,"message":"356","line":30,"column":11,"nodeType":"310","messageId":"311","endLine":30,"endColumn":19},{"ruleId":"352","severity":1,"message":"380","line":30,"column":21,"nodeType":"310","messageId":"311","endLine":30,"endColumn":29},{"ruleId":"352","severity":1,"message":"381","line":32,"column":16,"nodeType":"310","messageId":"311","endLine":32,"endColumn":23},{"ruleId":"352","severity":1,"message":"382","line":279,"column":9,"nodeType":"310","messageId":"311","endLine":279,"endColumn":31},{"ruleId":"352","severity":1,"message":"383","line":307,"column":11,"nodeType":"310","messageId":"311","endLine":307,"endColumn":14},{"ruleId":"314","severity":1,"message":"384","line":339,"column":6,"nodeType":"316","endLine":339,"endColumn":8,"suggestions":"385"},{"ruleId":"314","severity":1,"message":"386","line":349,"column":6,"nodeType":"316","endLine":349,"endColumn":21,"suggestions":"387"},{"ruleId":"314","severity":1,"message":"388","line":355,"column":6,"nodeType":"316","endLine":355,"endColumn":13,"suggestions":"389"},{"ruleId":"314","severity":1,"message":"388","line":361,"column":6,"nodeType":"316","endLine":361,"endColumn":13,"suggestions":"390"},{"ruleId":"327","severity":1,"message":"328","line":373,"column":11,"nodeType":"324","endLine":375,"endColumn":47},{"ruleId":"327","severity":1,"message":"328","line":442,"column":15,"nodeType":"324","endLine":442,"endColumn":72},{"ruleId":"352","severity":1,"message":"330","line":1,"column":21,"nodeType":"310","messageId":"311","endLine":1,"endColumn":30},{"ruleId":"352","severity":1,"message":"309","line":1,"column":32,"nodeType":"310","messageId":"311","endLine":1,"endColumn":40},{"ruleId":"352","severity":1,"message":"334","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":21},{"ruleId":"352","severity":1,"message":"391","line":2,"column":23,"nodeType":"310","messageId":"311","endLine":2,"endColumn":34},{"ruleId":"352","severity":1,"message":"330","line":1,"column":21,"nodeType":"310","messageId":"311","endLine":1,"endColumn":30},{"ruleId":"352","severity":1,"message":"309","line":1,"column":32,"nodeType":"310","messageId":"311","endLine":1,"endColumn":40},{"ruleId":"352","severity":1,"message":"334","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":21},{"ruleId":"352","severity":1,"message":"391","line":2,"column":23,"nodeType":"310","messageId":"311","endLine":2,"endColumn":34},{"ruleId":"352","severity":1,"message":"392","line":4,"column":8,"nodeType":"310","messageId":"311","endLine":4,"endColumn":16},{"ruleId":"327","severity":1,"message":"328","line":25,"column":11,"nodeType":"324","endLine":27,"endColumn":48},{"ruleId":"322","severity":1,"message":"323","line":30,"column":11,"nodeType":"324","messageId":"325","endLine":30,"endColumn":99,"fix":"393"},{"ruleId":"327","severity":1,"message":"328","line":31,"column":13,"nodeType":"324","endLine":31,"endColumn":64},{"ruleId":"352","severity":1,"message":"371","line":2,"column":8,"nodeType":"310","messageId":"311","endLine":2,"endColumn":12},{"ruleId":"352","severity":1,"message":"364","line":6,"column":49,"nodeType":"310","messageId":"311","endLine":6,"endColumn":69},{"ruleId":"352","severity":1,"message":"354","line":6,"column":71,"nodeType":"310","messageId":"311","endLine":6,"endColumn":80},{"ruleId":"352","severity":1,"message":"372","line":7,"column":10,"nodeType":"310","messageId":"311","endLine":7,"endColumn":19},{"ruleId":"352","severity":1,"message":"394","line":17,"column":10,"nodeType":"310","messageId":"311","endLine":17,"endColumn":20},{"ruleId":"314","severity":1,"message":"373","line":65,"column":6,"nodeType":"316","endLine":65,"endColumn":8,"suggestions":"395"},{"ruleId":"314","severity":1,"message":"396","line":108,"column":6,"nodeType":"316","endLine":108,"endColumn":8,"suggestions":"397"},{"ruleId":"352","severity":1,"message":"398","line":135,"column":12,"nodeType":"310","messageId":"311","endLine":135,"endColumn":25},{"ruleId":"327","severity":1,"message":"328","line":285,"column":7,"nodeType":"324","endLine":285,"endColumn":60},{"ruleId":"352","severity":1,"message":"399","line":1,"column":8,"nodeType":"310","messageId":"311","endLine":1,"endColumn":17},{"ruleId":"352","severity":1,"message":"400","line":6,"column":8,"nodeType":"310","messageId":"311","endLine":6,"endColumn":17},{"ruleId":"352","severity":1,"message":"401","line":7,"column":8,"nodeType":"310","messageId":"311","endLine":7,"endColumn":17},{"ruleId":"352","severity":1,"message":"402","line":11,"column":8,"nodeType":"310","messageId":"311","endLine":11,"endColumn":18},{"ruleId":"352","severity":1,"message":"379","line":14,"column":8,"nodeType":"310","messageId":"311","endLine":14,"endColumn":15},"no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'vocabulary' is defined but never used.","'removeCurrentDeck' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["403"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"404","text":"405"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"range":"406","text":"405"},"'useEffect' is defined but never used.","'topics' is defined but never used.","'currentDeck' is assigned a value but never used.","'current' is defined but never used.","'useSelector' is defined but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'startRepeating' and 'words'. Either include them or remove the dependency array.",["407"],"React Hook useEffect has missing dependencies: 'currentWord.word', 'isCorrect', and 'repeatingInput'. Either include them or remove the dependency array.",["408"],"React Hook useEffect has a missing dependency: 'makeUnswer'. Either include it or remove the dependency array.",["409"],"React Hook useEffect has missing dependencies: 'currentNum.meaning', 'isCorrect', and 'repeatingInput'. Either include them or remove the dependency array.",["410"],"'verbs' is defined but never used.","'words' is assigned a value but never used.","'setWords' is assigned a value but never used.","'wordsAreVisible' is assigned a value but never used.","'setWordsAreVisible' is assigned a value but never used.","'cardsAreVisible' is assigned a value but never used.","'repeatMode' is assigned a value but never used.","'setRepeatMode' is assigned a value but never used.","@typescript-eslint/no-unused-vars","'reportWebVitals' is defined but never used.","'clearUser' is defined but never used.","'navigate' is assigned a value but never used.","'userName' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'localStorage.userNick'. Either exclude it or remove the dependency array. Outer scope values like 'localStorage.userNick' aren't valid dependencies because mutating them doesn't re-render the component.",["411"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["412"],"'setUserName' is defined but never used.","'setUserNick' is defined but never used.","'setProgress' is defined but never used.","'setTemporaryProgress' is defined but never used.","'music' is assigned a value but never used.","'setMusic' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'backFromGame' and 'musicOn'. Either include them or remove the dependency array.",["413"],"'soundOff1' is defined but never used.","'clear' is defined but never used.","'fone' is defined but never used.","'TNickList' is defined but never used.","React Hook useEffect has a missing dependency: 'screen'. Either include it or remove the dependency array.",["414"],["415"],"React Hook useEffect has an unnecessary dependency: 'localStorage.userName'. Either exclude it or remove the dependency array. Outer scope values like 'localStorage.userName' aren't valid dependencies because mutating them doesn't re-render the component.",["416"],"'skip' is defined but never used.","'figure3' is defined but never used.","'userNick' is assigned a value but never used.","'setPart' is assigned a value but never used.","'module2' is assigned a value but never used.","'arr' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'gameProgress'. Either include it or remove the dependency array.",["417"],"React Hook useEffect has missing dependencies: 'choise', 'dispatch', and 'sumChoises'. Either include them or remove the dependency array. You can also do a functional update 'setChoise(c => ...)' if you only need 'choise' in the 'setChoise' call.",["418"],"React Hook useEffect has a missing dependency: 'module1'. Either include it or remove the dependency array.",["419"],["420"],"'useDispatch' is defined but never used.","'useSound' is defined but never used.",{"range":"421","text":"405"},"'nameSaving' is assigned a value but never used.",["422"],"React Hook useEffect has missing dependencies: 'dispatch' and 'gameProgress'. Either include them or remove the dependency array.",["423"],"'onForgetClick' is defined but never used.","'prologue1' is defined but never used.","'prologue6' is defined but never used.","'prologue7' is defined but never used.","'prologue11' is defined but never used.",{"desc":"424","fix":"425"},[345,345]," rel=\"noreferrer\"",[591,591],{"desc":"426","fix":"427"},{"desc":"428","fix":"429"},{"desc":"430","fix":"431"},{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},{"desc":"438","fix":"439"},{"desc":"440","fix":"441"},{"desc":"440","fix":"442"},{"desc":"434","fix":"443"},{"desc":"444","fix":"445"},{"desc":"446","fix":"447"},{"desc":"448","fix":"449"},{"desc":"448","fix":"450"},[992,992],{"desc":"440","fix":"451"},{"desc":"452","fix":"453"},"Update the dependencies array to be: [dispatch, navigate]",{"range":"454","text":"455"},"Update the dependencies array to be: [startRepeating, words, wordsToRepeat]",{"range":"456","text":"457"},"Update the dependencies array to be: [currentWord.word, isCorrect, repeatingForm, repeatingInput]",{"range":"458","text":"459"},"Update the dependencies array to be: [makeUnswer]",{"range":"460","text":"461"},"Update the dependencies array to be: [currentNum.meaning, isCorrect, repeatingForm, repeatingInput]",{"range":"462","text":"463"},"Update the dependencies array to be: []",{"range":"464","text":"465"},"Update the dependencies array to be: [dispatch]",{"range":"466","text":"467"},"Update the dependencies array to be: [backFromGame, musicOn, screen]",{"range":"468","text":"469"},"Update the dependencies array to be: [screen]",{"range":"470","text":"471"},{"range":"472","text":"471"},{"range":"473","text":"465"},"Update the dependencies array to be: [gameProgress]",{"range":"474","text":"475"},"Update the dependencies array to be: [choise, currentChoise, dispatch, sumChoises]",{"range":"476","text":"477"},"Update the dependencies array to be: [count, module1]",{"range":"478","text":"479"},{"range":"480","text":"479"},{"range":"481","text":"471"},"Update the dependencies array to be: [dispatch, gameProgress]",{"range":"482","text":"483"},[2050,2052],"[dispatch, navigate]",[1553,1568],"[startRepeating, words, wordsToRepeat]",[3366,3381],"[currentWord.word, isCorrect, repeatingForm, repeatingInput]",[3314,3316],"[makeUnswer]",[4668,4683],"[currentNum.meaning, isCorrect, repeatingForm, repeatingInput]",[779,802],"[]",[1152,1154],"[dispatch]",[2652,2660],"[backFromGame, musicOn, screen]",[1493,1495],"[screen]",[1689,1691],[2959,2982],[9715,9717],"[gameProgress]",[9996,10011],"[choise, currentChoise, dispatch, sumChoises]",[10100,10107],"[count, module1]",[10196,10203],[2315,2317],[3808,3810],"[dispatch, gameProgress]"]